/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakeTransfererRewardsPoolMock,
  StakeTransfererRewardsPoolMockInterface,
} from "../StakeTransfererRewardsPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_rewardsTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_stakeLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contractStakeLimit",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newRewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Extended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accumulatedRewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "transferTo",
        type: "address",
      },
    ],
    name: "exitAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extensionRewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardTokenIndex",
        type: "uint256",
      },
    ],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "getUserAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserOwedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRewardDebtLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserTokensOwedLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasStakingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "receiversWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_whitelisted",
        type: "bool",
      },
    ],
    name: "setReceiverWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRewardMultipliers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "firstStakedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawExcessRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200335338038062003353833981016040819052620000349162000517565b87878787878787878785858585856200004d33620002c0565b6001600160a01b038616620000b85760405162461bcd60e51b815260206004820152602660248201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b696e67604482015265103a37b5b2b760d11b60648201526084015b60405180910390fd5b8315801590620000c757508215155b620001215760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b65206c6044820152631a5b5a5d60e21b6064820152608401620000af565b6000855111620001805760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20656d7074792072657761726473546f6044820152636b656e7360e01b6064820152608401620000af565b600680546001600160a01b0319166001600160a01b0388161790558451620001b090600590602088019062000310565b50600e849055600f839055600780546001600160a01b0319166001600160a01b03831617905560005b6005548110156200028d57600d8054600181810190925560007fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5909101819055600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9091015580620002848162000653565b915050620001d9565b508151620002a39060109060208501906200037a565b5050505050505050505050505050505050505050505050620006ba565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000368579160200282015b828111156200036857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000331565b5062000376929150620003f7565b5090565b82805462000388906200067d565b90600052602060002090601f016020900481019282620003ac576000855562000368565b82601f10620003c757805160ff191683800117855562000368565b8280016001018555821562000368579182015b8281111562000368578251825591602001919060010190620003da565b5b80821115620003765760008155600101620003f8565b6001600160a01b03811681146200042457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000468576200046862000427565b604052919050565b80516200047d816200040e565b919050565b600082601f8301126200049457600080fd5b81516001600160401b03811115620004b057620004b062000427565b6020620004c6601f8301601f191682016200043d565b8281528582848701011115620004db57600080fd5b60005b83811015620004fb578581018301518282018401528201620004de565b838111156200050d5760008385840101525b5095945050505050565b600080600080600080600080610100898b0312156200053557600080fd5b885162000542816200040e565b60208a015160408b015160608c0151929a5090985096506001600160401b03808211156200056f57600080fd5b818b0191508b601f8301126200058457600080fd5b81518181111562000599576200059962000427565b8060051b620005ab602082016200043d565b9182526020818501810192908101908f841115620005c857600080fd5b6020860195505b83861015620005fa5785519250620005e7836200040e565b82825260209586019590910190620005cf565b809a505050505060808b0151955060a08b0151945060c08b01519150808211156200062457600080fd5b50620006338b828c0162000482565b9250506200064460e08a0162000470565b90509295985092959890939650565b60006000198214156200067657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200069257607f821691505b60208210811415620006b457634e487b7160e01b600052602260045260246000fd5b50919050565b612c8980620006ca6000396000f3fe608060405234801561001057600080fd5b50600436106102475760003560e01c8063817b1cd21161013b578063c97559ce116100b8578063ea8a1af01161007c578063ea8a1af01461051d578063f27d026414610525578063f2fde38b14610538578063fb58cad11461054b578063fd67fd7c1461055e57600080fd5b8063c97559ce146104de578063ce415302146104f1578063dd2da22014610504578063e6fd48bc1461050c578063e9fad8ee1461051557600080fd5b8063a694fc3a116100ff578063a694fc3a14610489578063a85adeab1461049c578063a861a7a3146104a5578063aabef0db146104b8578063b6d0dcd8146104cb57600080fd5b8063817b1cd21461041d578063869d8ead146104265780638da5cb5b14610439578063a1292aea1461044a578063a522ad251461047657600080fd5b80632e1a7d4d116101c9578063602e007a1161018d578063602e007a146103b05780636c32bf69146103c357806370a08231146103d6578063715018a61461040257806372f702f31461040a57600080fd5b80632e1a7d4d14610351578063363291dc1461036457806345ef79af146103975780634e71d92d146103a057806357b4f01f146103a857600080fd5b80632037424b116102105780632037424b146103105780632240e63c146103195780632af9b0701461032e5780632c3f455c146103365780632d9e88e11461034957600080fd5b806284c9271461024c57806303d1dae01461028b57806306fdde031461029457806317fcb39b146102a95780631959a002146102d4575b600080fd5b61027861025a36600461271f565b6001600160a01b031660009081526011602052604090206002015490565b6040519081526020015b60405180910390f35b610278600f5481565b61029c610571565b604051610282919061276d565b6007546102bc906001600160a01b031681565b6040516001600160a01b039091168152602001610282565b6102fb6102e236600461271f565b6011602052600090815260409020805460019091015482565b60408051928352602083019190915201610282565b610278600b5481565b61032c61032736600461271f565b6105ff565b005b61032c61079b565b61032c61034436600461271f565b6108bc565b600554610278565b61032c61035f3660046127a0565b610953565b61038761037236600461271f565b60126020526000908152604090205460ff1681565b6040519015158152602001610282565b610278600e5481565b61032c61095f565b610387610967565b6102786103be3660046127a0565b610981565b61032c6103d13660046127cf565b6109a2565b6102786103e436600461271f565b6001600160a01b031660009081526011602052604090206001015490565b61032c610bd2565b6006546102bc906001600160a01b031681565b61027860015481565b61032c610434366004612899565b610c06565b6000546001600160a01b03166102bc565b61027861045836600461271f565b6001600160a01b031660009081526011602052604090206003015490565b61032c61048436600461291c565b610c42565b61032c6104973660046127a0565b610e72565b61027860095481565b61032c6104b336600461295d565b610e7e565b6102786104c63660046127a0565b610ed0565b6102bc6104d93660046127a0565b611083565b6102786104ec366004612994565b6110ad565b6102786104ff3660046129c7565b611200565b61032c611242565b61027860085481565b61032c6112dc565b61032c6112e5565b6102786105333660046129c7565b611390565b61032c61054636600461271f565b6113be565b6102786105593660046127a0565b611456565b61027861056c3660046127a0565b611466565b6010805461057e906129f1565b80601f01602080910402602001604051908101604052809291908181526020018280546105aa906129f1565b80156105f75780601f106105cc576101008083540402835291602001916105f7565b820191906000526020600020905b8154815290600101906020018083116105da57829003601f168201915b505050505081565b6001600160a01b038116600090815260126020526040902054819060ff166106835760405162461bcd60e51b815260206004820152602c60248201527f65786974416e645472616e736665723a3a7265636569766572206973206e6f7460448201526b081dda1a5d195b1a5cdd195960a21b60648201526084015b60405180910390fd5b33600090815260116020526040902060018101546106a057505050565b6106a8611242565b60018101546106b633611476565b6106bf33611600565b60008260010181905550806001546106d79190612a42565b60015560005b60055481101561071c5760008360020182815481106106fe576106fe612a59565b6000918252602090912001558061071481612a6f565b9150506106dd565b50600654610734906001600160a01b0316858361185c565b604051633c323a1b60e01b8152336004820152602481018290526001600160a01b03851690633c323a1b90604401600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b5050505050505b5050565b6000546001600160a01b031633146107c55760405162461bcd60e51b815260040161067a90612a8a565b6000600b54116108305760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a207468657265206973206e6f2065787460448201526f195b9cda5bdb881cd8da19591d5b195960821b606482015260840161067a565b60095442106108a75760405162461bcd60e51b815260206004820152603d60248201527f52657761726473506f6f6c426173653a2063616e6e6f742063616e63656c206560448201527f7874656e73696f6e206166746572206974206861732073746172746564000000606482015260840161067a565b6000600b8190556108ba90600c9061264a565b565b6000546001600160a01b031633146108e65760405162461bcd60e51b815260040161067a90612a8a565b60055460005b8181101561094e5760006108ff82610ed0565b9050801561093b5761093b84826005858154811061091f5761091f612a59565b6000918252602090912001546001600160a01b031691906119b3565b508061094681612a6f565b9150506108ec565b505050565b61095c816119e3565b50565b6108ba6119ec565b60008060085411801561097c57506008544210155b905090565b600c818154811061099157600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146109cc5760405162461bcd60e51b815260040161067a90612a8a565b600b5415610a335760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a20746865726520697320616c7265616460448201526d3c9030b71032bc3a32b739b4b7b760911b606482015260840161067a565b60008211610a9c5760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a206475726174696f6e206d757374206260448201526f0652067726561746572207468616e20360841b606482015260840161067a565b80516005548114610abf5760405162461bcd60e51b815260040161067a90612abf565b6009546000610ace8583612b07565b905060005b83811015610b8b576000610b018484888581518110610af457610af4612a59565b60200260200101516119f4565b90506000610b0e83610ed0565b905081811015610b765760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526c1c991cc81d1bc8195e1d195b99609a1b606482015260840161067a565b50508080610b8390612a6f565b915050610ad3565b50600954421115610bb157610ba1600954611a0d565b610bac828286611b20565b610bcb565b600b8590558351610bc990600c906020870190612668565b505b5050505050565b6000546001600160a01b03163314610bfc5760405162461bcd60e51b815260040161067a90612a8a565b6108ba6000611c1c565b6000546001600160a01b03163314610c305760405162461bcd60e51b815260040161067a90612a8a565b610c3c84848484611c6c565b50505050565b6000546001600160a01b03163314610c6c5760405162461bcd60e51b815260040161067a90612a8a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190612b1f565b905060008111610d385760405162461bcd60e51b815260206004820152601b60248201527f52657761726473506f6f6c426173653a206e6f20726577617264730000000000604482015260640161067a565b6006546001600160a01b0383811691161415610dad5760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526d1039ba30b5b4b733903a37b5b2b760911b606482015260840161067a565b60055460005b81811015610e5d5760058181548110610dce57610dce612a59565b6000918252602090912001546001600160a01b0385811691161415610e4b5760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526c103932bbb0b932103a37b5b2b760991b606482015260840161067a565b80610e5581612a6f565b915050610db3565b50610c3c6001600160a01b03841685846119b3565b61095c81336001611edd565b6000546001600160a01b03163314610ea85760405162461bcd60e51b815260040161067a90612a8a565b6001600160a01b0382166000908152601260205260409020805460ff19168215151790555050565b60008060058381548110610ee657610ee6612a59565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a082319060240160206040518083038186803b158015610f3457600080fd5b505afa158015610f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6c9190612b1f565b905060085460001415610f80579392505050565b6000610fae60085460095460048881548110610f9e57610f9e612a59565b90600052602060002001546119f4565b600b5490915015610ff4576000610fe4600954600b54600954610fd19190612b07565b600c8981548110610f9e57610f9e612a59565b9050610ff08183612b07565b9150505b60006002868154811061100957611009612a59565b9060005260206000200154826003888154811061102857611028612a59565b906000526020600020015461103d9190612b07565b6110479190612a42565b6110519084612a42565b6006549091506001600160a01b038581169116141561107a576001546110779082612a42565b90505b95945050505050565b6005818154811061109357600080fd5b6000918252602090912001546001600160a01b0316905081565b60008060095483106110c1576009546110c3565b825b90506000600a54826110d59190612a42565b90506000600486815481106110ec576110ec612a59565b9060005260206000200154826111029190612b38565b90506000600154670de0b6b3a76400008361111d9190612b38565b6111279190612b57565b9050600081600d898154811061113f5761113f612a59565b90600052602060002001546111549190612b07565b6001600160a01b038a166000908152601160205260408120600181015492935091670de0b6b3a76400009061118a908590612b38565b6111949190612b57565b90506000826002018b815481106111ad576111ad612a59565b9060005260206000200154826111c39190612a42565b905080836003018c815481106111db576111db612a59565b90600052602060002001546111f09190612b07565b9c9b505050505050505050505050565b6001600160a01b03821660009081526011602052604081206003810180548490811061122e5761122e612a59565b906000526020600020015491505092915050565b60095442908111801561125757506000600b54115b156112d357611267600954611a0d565b6112d3600954600b5460095461127d9190612b07565b600c8054806020026020016040519081016040528092919081815260200182805480156112c957602002820191906000526020600020905b8154815260200190600101908083116112b5575b5050505050611b20565b61095c81611a0d565b6108ba336121bd565b6000546001600160a01b0316331461130f5760405162461bcd60e51b815260040161067a90612a8a565b600854421061137f5760405162461bcd60e51b815260206004820152603660248201527f52657761726473506f6f6c426173653a204e6f207374617274207363686564756044820152751b1959081bdc88185b1c9958591e481cdd185c9d195960521b606482015260840161067a565b600060088190556009819055600a55565b6001600160a01b03821660009081526011602052604081206002810180548490811061122e5761122e612a59565b6000546001600160a01b031633146113e85760405162461bcd60e51b815260040161067a90612a8a565b6001600160a01b03811661144d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067a565b61095c81611c1c565b600d818154811061099157600080fd5b6004818154811061099157600080fd5b6001600160a01b038116600090815260116020526040902060055460028201546114e85760005b818110156114e6576002830180546001818101835560009283526020808420909201839055600386018054918201815583529082200155806114de81612a6f565b91505061149d565b505b60018201546114f657505050565b60005b81811015610c3c576000670de0b6b3a7640000600d838154811061151f5761151f612a59565b906000526020600020015485600101546115399190612b38565b6115439190612b57565b9050600084600201838154811061155c5761155c612a59565b9060005260206000200154826115729190612a42565b905080156115eb578085600301848154811061159057611590612a59565b90600052602060002001546115a59190612b07565b8560030184815481106115ba576115ba612a59565b9060005260206000200181905550818560020184815481106115de576115de612a59565b6000918252602090912001555b505080806115f890612a6f565b9150506114f9565b6001600160a01b0381166000908152601160205260409020611620611242565b61162982611476565b60055460005b81811015610c3c57600083600301828154811061164e5761164e612a59565b90600052602060002001549050600084600301838154811061167257611672612a59565b9060005260206000200181905550806002838154811061169457611694612a59565b90600052602060002001546116a99190612b07565b600283815481106116bc576116bc612a59565b9060005260206000200181905550846001600160a01b03167f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e826005858154811061170957611709612a59565b60009182526020909120015460405161173e92916001600160a01b0316909182526001600160a01b0316602082015260400190565b60405180910390a2600754600580546001600160a01b03909216918490811061176957611769612a59565b6000918252602090912001546001600160a01b03161415611831576005828154811061179757611797612a59565b600091825260209091200154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156117e657600080fd5b505af11580156117fa573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f1935050505015801561182b573d6000803e3d6000fd5b50611849565b61184985826005858154811061091f5761091f612a59565b508061185481612a6f565b91505061162f565b8015806118e55750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156118ab57600080fd5b505afa1580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190612b1f565b155b6119505760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161067a565b6040516001600160a01b03831660248201526044810182905261094e90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612227565b6040516001600160a01b03831660248201526044810182905261094e90849063a9059cbb60e01b9060640161197c565b61095c816123a7565b6108ba612415565b600080611a018585612a42565b905061107a8184612b38565b600a548111611a195750565b60006009548210611a2c57600954611a2e565b815b90506000600a5482611a409190612a42565b905080611a4c57505050565b600154611a5a5750600a5550565b60055460005b81811015611b1757600060048281548110611a7d57611a7d612a59565b906000526020600020015484611a939190612b38565b90506000600154670de0b6b3a764000083611aae9190612b38565b611ab89190612b57565b905080600d8481548110611ace57611ace612a59565b9060005260206000200154611ae39190612b07565b600d8481548110611af657611af6612a59565b60009182526020909120015550819050611b0f81612a6f565b915050611a60565b505050600a5550565b60045460005b81811015611ba9576000611b4c60085460095460048581548110610f9e57610f9e612a59565b90508060038381548110611b6257611b62612a59565b9060005260206000200154611b779190612b07565b60038381548110611b8a57611b8a612a59565b6000918252602090912001555080611ba181612a6f565b915050611b26565b508151611bbd906004906020850190612668565b50600884905560098390556000600b819055611bdb90600c9061264a565b7fd363ac13638f68e7284bc244076ff171a95616bfe30c8c7629980906a9db0363848484604051611c0e93929190612b79565b60405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60085415611cbc5760405162461bcd60e51b815260206004820181905260248201527f52657761726473506f6f6c426173653a20616c72656164792073746172746564604482015260640161067a565b428410158015611ccb57508383115b611d255760405162461bcd60e51b815260206004820152602560248201527f52657761726473506f6f6c426173653a20696e76616c6964207374617274206f6044820152641c88195b9960da1b606482015260840161067a565b6005548114611d465760405162461bcd60e51b815260040161067a90612abf565b611d52600483836126b3565b5060055460005b81811015611e89576000611d7b878760048581548110610f9e57610f9e612a59565b9050600060058381548110611d9257611d92612a59565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611dde57600080fd5b505afa158015611df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e169190612b1f565b905081811015611e745760405162461bcd60e51b815260206004820152602360248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526272647360e81b606482015260840161067a565b50508080611e8190612a6f565b915050611d59565b5060088590556009849055600a8590556040517f74e89788dfd5b96dd5e9c38139638937b89fc0d4863da5644783b5d7f876b87a90611ece9087908790600490612bce565b60405180910390a15050505050565b600854429015801590611ef1575060085481115b8015611f0c5750600b54600954611f089190612b07565b8111155b611f9d5760405162461bcd60e51b815260206004820152605660248201527f52657761726473506f6f6c426173653a207374616b696e67206973206e6f742060448201527f73746172746564206f722069732066696e6973686564206f72206e6f20657874606482015275656e73696f6e2074616b696e6720696e20706c61636560501b608482015260a40161067a565b6001600160a01b0383166000908152601160205260409020600e546001820154611fc8908790612b07565b11158015611fe55750600f5485600154611fe29190612b07565b11155b61203d5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a207374616b65206c696d69742072656160448201526318da195960e21b606482015260840161067a565b6000851161208d5760405162461bcd60e51b815260206004820152601f60248201527f52657761726473506f6f6c426173653a2063616e6e6f74207374616b65203000604482015260640161067a565b600181015461209a578181555b6120a2611242565b6120ab84611476565b8481600101546120bb9190612b07565b8160010181905550846001546120d19190612b07565b60015560055460005b8181101561215557670de0b6b3a7640000600d82815481106120fe576120fe612a59565b906000526020600020015484600101546121189190612b38565b6121229190612b57565b83600201828154811061213757612137612a59565b6000918252602090912001558061214d81612a6f565b9150506120da565b50846001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8760405161219191815260200190565b60405180910390a2610bc9846121a757336121a9565b855b6006546001600160a01b0316903089612483565b6001600160a01b0381166000818152601160209081526040918290206001810154925192835292917f920bb94eb3842a728db98228c375ff6b00c5bc5a54fac6736155517a0a20a61a910160405180910390a261221982611600565b6107978160010154836124bb565b6001600160a01b0382163b61227e5760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015260640161067a565b600080836001600160a01b0316836040516122999190612c1a565b6000604051808303816000865af19150503d80600081146122d6576040519150601f19603f3d011682016040523d82523d6000602084013e6122db565b606091505b50915091508161232d5760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015260640161067a565b805115610c3c57808060200190518101906123489190612c36565b610c3c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161067a565b60405162461bcd60e51b815260206004820152603f60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420776974686472617760448201527f2066726f6d207468697320636f6e74726163742e204f6e6c7920657869742e00606482015260840161067a565b60405162461bcd60e51b815260206004820152603c60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420636c61696d20667260448201527f6f6d207468697320636f6e74726163742e204f6e6c7920657869742e00000000606482015260840161067a565b6040516001600160a01b0380851660248301528316604482015260648101829052610c3c9085906323b872dd60e01b9060840161197c565b600082116125165760405162461bcd60e51b815260206004820152602260248201527f52657761726473506f6f6c426173653a2063616e6e6f74207769746864726177604482015261020360f41b606482015260840161067a565b6001600160a01b0381166000908152601160205260409020612536611242565b61253f82611476565b82816001015461254f9190612a42565b8160010181905550826001546125659190612a42565b60015560055460005b818110156125ef576000670de0b6b3a7640000600d838154811061259457612594612a59565b906000526020600020015485600101546125ae9190612b38565b6125b89190612b57565b9050808460020183815481106125d0576125d0612a59565b60009182526020909120015550806125e781612a6f565b91505061256e565b50826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58560405161262b91815260200190565b60405180910390a2600654610c3c906001600160a01b031684866119b3565b508054600082559060005260206000209081019061095c91906126ee565b8280548282559060005260206000209081019282156126a3579160200282015b828111156126a3578251825591602001919060010190612688565b506126af9291506126ee565b5090565b8280548282559060005260206000209081019282156126a3579160200282015b828111156126a35782358255916020019190600101906126d3565b5b808211156126af57600081556001016126ef565b80356001600160a01b038116811461271a57600080fd5b919050565b60006020828403121561273157600080fd5b61273a82612703565b9392505050565b60005b8381101561275c578181015183820152602001612744565b83811115610c3c5750506000910152565b602081526000825180602084015261278c816040850160208701612741565b601f01601f19169190910160400192915050565b6000602082840312156127b257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156127e257600080fd5b8235915060208084013567ffffffffffffffff8082111561280257600080fd5b818601915086601f83011261281657600080fd5b813581811115612828576128286127b9565b8060051b604051601f19603f8301168101818110858211171561284d5761284d6127b9565b60405291825284820192508381018501918983111561286b57600080fd5b938501935b8285101561288957843584529385019392850192612870565b8096505050505050509250929050565b600080600080606085870312156128af57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156128d557600080fd5b818701915087601f8301126128e957600080fd5b8135818111156128f857600080fd5b8860208260051b850101111561290d57600080fd5b95989497505060200194505050565b6000806040838503121561292f57600080fd5b61293883612703565b915061294660208401612703565b90509250929050565b801515811461095c57600080fd5b6000806040838503121561297057600080fd5b61297983612703565b915060208301356129898161294f565b809150509250929050565b6000806000606084860312156129a957600080fd5b6129b284612703565b95602085013595506040909401359392505050565b600080604083850312156129da57600080fd5b6129e383612703565b946020939093013593505050565b600181811c90821680612a0557607f821691505b60208210811415612a2657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612a5457612a54612a2c565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a8357612a83612a2c565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526028908201527f52657761726473506f6f6c426173653a20696e76616c69642072657761726450604082015267195c94d958dbdb9960c21b606082015260800190565b60008219821115612b1a57612b1a612a2c565b500190565b600060208284031215612b3157600080fd5b5051919050565b6000816000190483118215151615612b5257612b52612a2c565b500290565b600082612b7457634e487b7160e01b600052601260045260246000fd5b500490565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015612bc057845183529383019391830191600101612ba4565b509098975050505050505050565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b81811015612bc057845483526001948501949284019201612bfe565b60008251612c2c818460208701612741565b9190910192915050565b600060208284031215612c4857600080fd5b815161273a8161294f56fea264697066735822122016a76b6ab0d8e37272bfa9793c48973688f08faf8b7a768df4eddf2dea79459764736f6c63430008090033";

type StakeTransfererRewardsPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeTransfererRewardsPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeTransfererRewardsPoolMock__factory extends ContractFactory {
  constructor(...args: StakeTransfererRewardsPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakeTransfererRewardsPoolMock> {
    return super.deploy(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<StakeTransfererRewardsPoolMock>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): StakeTransfererRewardsPoolMock {
    return super.attach(address) as StakeTransfererRewardsPoolMock;
  }
  connect(signer: Signer): StakeTransfererRewardsPoolMock__factory {
    return super.connect(signer) as StakeTransfererRewardsPoolMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeTransfererRewardsPoolMockInterface {
    return new utils.Interface(_abi) as StakeTransfererRewardsPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeTransfererRewardsPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakeTransfererRewardsPoolMock;
  }
}
