/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundingRewardsPool,
  CompoundingRewardsPoolInterface,
} from "../CompoundingRewardsPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardsTokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newRewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Extended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accumulatedRewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extensionRewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardTokenIndex",
        type: "uint256",
      },
    ],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "getUserAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserOwedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRewardDebtLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserTokensOwedLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasStakingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRewardMultipliers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "firstStakedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawExcessRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002dbd38038062002dbd8339810160408190526200003491620005ae565b828585600019808686620000483362000357565b6001600160a01b038616620000b35760405162461bcd60e51b815260206004820152602660248201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b696e67604482015265103a37b5b2b760d11b60648201526084015b60405180910390fd5b8315801590620000c257508215155b6200011c5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b65206c6044820152631a5b5a5d60e21b6064820152608401620000aa565b60008551116200017b5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20656d7074792072657761726473546f6044820152636b656e7360e01b6064820152608401620000aa565b600680546001600160a01b0319166001600160a01b0388161790558451620001ab906005906020880190620003a7565b50600e849055600f839055600780546001600160a01b0319166001600160a01b03831617905560005b6005548110156200028857600d8054600181810190925560007fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5909101819055600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910155806200027f81620006d0565b915050620001d4565b5081516200029e90601090602085019062000411565b50505050506001600160a01b038316151591506200033f90505760405162461bcd60e51b815260206004820152604f60248201527f4f6e655374616b6572466561747572653a3a73657453636f6e7374727563746f60448201527f7274616b6572206e6577207374616b657220616464726573732063616e27742060648201526e6265207a65726f206164647265737360881b608482015260a401620000aa565b6001600160a01b031660805250620007379350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620003ff579160200282015b82811115620003ff57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003c8565b506200040d9291506200048e565b5090565b8280546200041f90620006fa565b90600052602060002090601f016020900481019282620004435760008555620003ff565b82601f106200045e57805160ff1916838001178555620003ff565b82800160010185558215620003ff579182015b82811115620003ff57825182559160200191906001019062000471565b5b808211156200040d57600081556001016200048f565b6001600160a01b0381168114620004bb57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620004ff57620004ff620004be565b604052919050565b80516200051481620004a5565b919050565b600082601f8301126200052b57600080fd5b81516001600160401b03811115620005475762000547620004be565b60206200055d601f8301601f19168201620004d4565b82815285828487010111156200057257600080fd5b60005b838110156200059257858101830151828201840152820162000575565b83811115620005a45760008385840101525b5095945050505050565b600080600080600060a08688031215620005c757600080fd5b8551620005d481620004a5565b602087810151919650906001600160401b0380821115620005f457600080fd5b818901915089601f8301126200060957600080fd5b8151818111156200061e576200061e620004be565b8060051b6200062f858201620004d4565b918252838101850191858101908d8411156200064a57600080fd5b948601945b838610156200067857855192506200066783620004a5565b82825294860194908601906200064f565b99506200068c9250505060408a0162000507565b95506060890151925080831115620006a357600080fd5b5050620006b38882890162000519565b925050620006c46080870162000507565b90509295509295909350565b6000600019821415620006f357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200070f57607f821691505b602082108114156200073157634e487b7160e01b600052602260045260246000fd5b50919050565b6080516126636200075a6000396000818161036901526117e701526126636000f3fe608060405234801561001057600080fd5b50600436106102315760003560e01c8063817b1cd211610130578063c97559ce116100b8578063ea8a1af01161007c578063ea8a1af0146104e5578063f27d0264146104ed578063f2fde38b14610500578063fb58cad114610513578063fd67fd7c1461052657600080fd5b8063c97559ce146104a6578063ce415302146104b9578063dd2da220146104cc578063e6fd48bc146104d4578063e9fad8ee146104dd57600080fd5b8063a522ad25116100ff578063a522ad2514610451578063a694fc3a14610464578063a85adeab14610477578063aabef0db14610480578063b6d0dcd81461049357600080fd5b8063817b1cd2146103f8578063869d8ead146104015780638da5cb5b14610414578063a1292aea1461042557600080fd5b80632e1a7d4d116101be578063602e007a11610182578063602e007a1461038b5780636c32bf691461039e57806370a08231146103b1578063715018a6146103dd57806372f702f3146103e557600080fd5b80632e1a7d4d1461032857806345ef79af1461033b5780634e71d92d1461034457806357b4f01f1461034c5780635ebaf1db1461036457600080fd5b80631959a002116102055780631959a002146102be5780632037424b146102fa5780632af9b070146103035780632c3f455c1461030d5780632d9e88e11461032057600080fd5b806284c9271461023657806303d1dae01461027557806306fdde031461027e57806317fcb39b14610293575b600080fd5b6102626102443660046121f9565b6001600160a01b031660009081526011602052604090206002015490565b6040519081526020015b60405180910390f35b610262600f5481565b610286610539565b60405161026c9190612247565b6007546102a6906001600160a01b031681565b6040516001600160a01b03909116815260200161026c565b6102e56102cc3660046121f9565b6011602052600090815260409020805460019091015482565b6040805192835260208301919091520161026c565b610262600b5481565b61030b6105c7565b005b61030b61031b3660046121f9565b6106f1565b600554610262565b61030b61033636600461227a565b610788565b610262600e5481565b61030b610795565b61035461079e565b604051901515815260200161026c565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b61026261039936600461227a565b6107b8565b61030b6103ac3660046122df565b6107d9565b6102626103bf3660046121f9565b6001600160a01b031660009081526011602052604090206001015490565b61030b61083d565b6006546102a6906001600160a01b031681565b61026260015481565b61030b61040f36600461232b565b610871565b6000546001600160a01b03166102a6565b6102626104333660046121f9565b6001600160a01b031660009081526011602052604090206003015490565b61030b61045f36600461237e565b6108ad565b61030b61047236600461227a565b610add565b61026260095481565b61026261048e36600461227a565b610ae6565b6102a66104a136600461227a565b610c99565b6102626104b43660046123b1565b610cc3565b6102626104c73660046123e4565b610e16565b61030b610e58565b61026260085481565b61030b610ef2565b61030b610efb565b6102626104fb3660046123e4565b610fa6565b61030b61050e3660046121f9565b610fd4565b61026261052136600461227a565b61106c565b61026261053436600461227a565b61107c565b601080546105469061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546105729061240e565b80156105bf5780601f10610594576101008083540402835291602001916105bf565b820191906000526020600020905b8154815290600101906020018083116105a257829003601f168201915b505050505081565b6000546001600160a01b031633146105fa5760405162461bcd60e51b81526004016105f190612449565b60405180910390fd5b6000600b54116106655760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a207468657265206973206e6f2065787460448201526f195b9cda5bdb881cd8da19591d5b195960821b60648201526084016105f1565b60095442106106dc5760405162461bcd60e51b815260206004820152603d60248201527f52657761726473506f6f6c426173653a2063616e6e6f742063616e63656c206560448201527f7874656e73696f6e20616674657220697420686173207374617274656400000060648201526084016105f1565b6000600b8190556106ef90600c90612124565b565b6000546001600160a01b0316331461071b5760405162461bcd60e51b81526004016105f190612449565b60055460005b8181101561078357600061073482610ae6565b90508015610770576107708482600585815481106107545761075461247e565b6000918252602090912001546001600160a01b0316919061108c565b508061077b816124aa565b915050610721565b505050565b61079281336110ef565b50565b6106ef3361127e565b6000806008541180156107b357506008544210155b905090565b600c81815481106107c857600080fd5b600091825260209091200154905081565b60405162461bcd60e51b815260206004820152603360248201527f4e6f6e436f6d706f756e64696e6752657761726473506f6f6c3a3a63616e6e6f6044820152723a1032bc3a32b732103a3434b9903837b7b61760691b60648201526084016105f1565b6000546001600160a01b031633146108675760405162461bcd60e51b81526004016105f190612449565b6106ef60006114da565b6000546001600160a01b0316331461089b5760405162461bcd60e51b81526004016105f190612449565b6108a78484848461152a565b50505050565b6000546001600160a01b031633146108d75760405162461bcd60e51b81526004016105f190612449565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561091957600080fd5b505afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095191906124c5565b9050600081116109a35760405162461bcd60e51b815260206004820152601b60248201527f52657761726473506f6f6c426173653a206e6f2072657761726473000000000060448201526064016105f1565b6006546001600160a01b0383811691161415610a185760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526d1039ba30b5b4b733903a37b5b2b760911b60648201526084016105f1565b60055460005b81811015610ac85760058181548110610a3957610a3961247e565b6000918252602090912001546001600160a01b0385811691161415610ab65760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526c103932bbb0b932103a37b5b2b760991b60648201526084016105f1565b80610ac0816124aa565b915050610a1e565b506108a76001600160a01b038416858461108c565b610792816117dc565b60008060058381548110610afc57610afc61247e565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a082319060240160206040518083038186803b158015610b4a57600080fd5b505afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8291906124c5565b905060085460001415610b96579392505050565b6000610bc460085460095460048881548110610bb457610bb461247e565b906000526020600020015461185d565b600b5490915015610c0a576000610bfa600954600b54600954610be791906124de565b600c8981548110610bb457610bb461247e565b9050610c0681836124de565b9150505b600060028681548110610c1f57610c1f61247e565b90600052602060002001548260038881548110610c3e57610c3e61247e565b9060005260206000200154610c5391906124de565b610c5d91906124f6565b610c6790846124f6565b6006549091506001600160a01b0385811691161415610c9057600154610c8d90826124f6565b90505b95945050505050565b60058181548110610ca957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806009548310610cd757600954610cd9565b825b90506000600a5482610ceb91906124f6565b9050600060048681548110610d0257610d0261247e565b906000526020600020015482610d18919061250d565b90506000600154670de0b6b3a764000083610d33919061250d565b610d3d919061252c565b9050600081600d8981548110610d5557610d5561247e565b9060005260206000200154610d6a91906124de565b6001600160a01b038a166000908152601160205260408120600181015492935091670de0b6b3a764000090610da090859061250d565b610daa919061252c565b90506000826002018b81548110610dc357610dc361247e565b906000526020600020015482610dd991906124f6565b905080836003018c81548110610df157610df161247e565b9060005260206000200154610e0691906124de565b9c9b505050505050505050505050565b6001600160a01b038216600090815260116020526040812060038101805484908110610e4457610e4461247e565b906000526020600020015491505092915050565b600954429081118015610e6d57506000600b54115b15610ee957610e7d600954611876565b610ee9600954600b54600954610e9391906124de565b600c805480602002602001604051908101604052809291908181526020018280548015610edf57602002820191906000526020600020905b815481526020019060010190808311610ecb575b5050505050611989565b61079281611876565b6106ef33611a85565b6000546001600160a01b03163314610f255760405162461bcd60e51b81526004016105f190612449565b6008544210610f955760405162461bcd60e51b815260206004820152603660248201527f52657761726473506f6f6c426173653a204e6f207374617274207363686564756044820152751b1959081bdc88185b1c9958591e481cdd185c9d195960521b60648201526084016105f1565b600060088190556009819055600a55565b6001600160a01b038216600090815260116020526040812060028101805484908110610e4457610e4461247e565b6000546001600160a01b03163314610ffe5760405162461bcd60e51b81526004016105f190612449565b6001600160a01b0381166110635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f1565b610792816114da565b600d81815481106107c857600080fd5b600481815481106107c857600080fd5b6040516001600160a01b03831660248201526044810182905261078390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611af3565b6000821161114a5760405162461bcd60e51b815260206004820152602260248201527f52657761726473506f6f6c426173653a2063616e6e6f74207769746864726177604482015261020360f41b60648201526084016105f1565b6001600160a01b038116600090815260116020526040902061116a610e58565b61117382611c73565b82816001015461118391906124f6565b81600101819055508260015461119991906124f6565b60015560055460005b81811015611223576000670de0b6b3a7640000600d83815481106111c8576111c861247e565b906000526020600020015485600101546111e2919061250d565b6111ec919061252c565b9050808460020183815481106112045761120461247e565b600091825260209091200155508061121b816124aa565b9150506111a2565b50826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58560405161125f91815260200190565b60405180910390a26006546108a7906001600160a01b0316848661108c565b6001600160a01b038116600090815260116020526040902061129e610e58565b6112a782611c73565b60055460005b818110156108a75760008360030182815481106112cc576112cc61247e565b9060005260206000200154905060008460030183815481106112f0576112f061247e565b906000526020600020018190555080600283815481106113125761131261247e565b906000526020600020015461132791906124de565b6002838154811061133a5761133a61247e565b9060005260206000200181905550846001600160a01b03167f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e82600585815481106113875761138761247e565b6000918252602090912001546040516113bc92916001600160a01b0316909182526001600160a01b0316602082015260400190565b60405180910390a2600754600580546001600160a01b0390921691849081106113e7576113e761247e565b6000918252602090912001546001600160a01b031614156114af57600582815481106114155761141561247e565b600091825260209091200154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561146457600080fd5b505af1158015611478573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156114a9573d6000803e3d6000fd5b506114c7565b6114c78582600585815481106107545761075461247e565b50806114d2816124aa565b9150506112ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6008541561157a5760405162461bcd60e51b815260206004820181905260248201527f52657761726473506f6f6c426173653a20616c7265616479207374617274656460448201526064016105f1565b42841015801561158957508383115b6115e35760405162461bcd60e51b815260206004820152602560248201527f52657761726473506f6f6c426173653a20696e76616c6964207374617274206f6044820152641c88195b9960da1b60648201526084016105f1565b60055481146116455760405162461bcd60e51b815260206004820152602860248201527f52657761726473506f6f6c426173653a20696e76616c69642072657761726450604482015267195c94d958dbdb9960c21b60648201526084016105f1565b61165160048383612142565b5060055460005b8181101561178857600061167a878760048581548110610bb457610bb461247e565b90506000600583815481106116915761169161247e565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156116dd57600080fd5b505afa1580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171591906124c5565b9050818110156117735760405162461bcd60e51b815260206004820152602360248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526272647360e81b60648201526084016105f1565b50508080611780906124aa565b915050611658565b5060088590556009849055600a8590556040517f74e89788dfd5b96dd5e9c38139638937b89fc0d4863da5644783b5d7f876b87a906117cd908790879060049061254e565b60405180910390a15050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118545760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c795374616b65723a3a696e636f7272656374207374616b65720000000060448201526064016105f1565b61079281611dfd565b60008061186a85856124f6565b9050610c90818461250d565b600a5481116118825750565b6000600954821061189557600954611897565b815b90506000600a54826118a991906124f6565b9050806118b557505050565b6001546118c35750600a5550565b60055460005b81811015611980576000600482815481106118e6576118e661247e565b9060005260206000200154846118fc919061250d565b90506000600154670de0b6b3a764000083611917919061250d565b611921919061252c565b905080600d84815481106119375761193761247e565b906000526020600020015461194c91906124de565b600d848154811061195f5761195f61247e565b60009182526020909120015550819050611978816124aa565b9150506118c9565b505050600a5550565b60045460005b81811015611a125760006119b560085460095460048581548110610bb457610bb461247e565b905080600383815481106119cb576119cb61247e565b90600052602060002001546119e091906124de565b600383815481106119f3576119f361247e565b6000918252602090912001555080611a0a816124aa565b91505061198f565b508151611a2690600490602085019061218d565b50600884905560098390556000600b819055611a4490600c90612124565b7fd363ac13638f68e7284bc244076ff171a95616bfe30c8c7629980906a9db0363848484604051611a77939291906125a8565b60405180910390a150505050565b6001600160a01b0381166000818152601160209081526040918290206001810154925192835292917f920bb94eb3842a728db98228c375ff6b00c5bc5a54fac6736155517a0a20a61a910160405180910390a2611ae18261127e565b611aef8160010154836110ef565b5050565b6001600160a01b0382163b611b4a5760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740060448201526064016105f1565b600080836001600160a01b031683604051611b6591906125ef565b6000604051808303816000865af19150503d8060008114611ba2576040519150601f19603f3d011682016040523d82523d6000602084013e611ba7565b606091505b509150915081611bf95760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016105f1565b8051156108a75780806020019051810190611c14919061260b565b6108a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105f1565b6001600160a01b03811660009081526011602052604090206005546002820154611ce55760005b81811015611ce357600283018054600181810183556000928352602080842090920183905560038601805491820181558352908220015580611cdb816124aa565b915050611c9a565b505b6001820154611cf357505050565b60005b818110156108a7576000670de0b6b3a7640000600d8381548110611d1c57611d1c61247e565b90600052602060002001548560010154611d36919061250d565b611d40919061252c565b90506000846002018381548110611d5957611d5961247e565b906000526020600020015482611d6f91906124f6565b90508015611de85780856003018481548110611d8d57611d8d61247e565b9060005260206000200154611da291906124de565b856003018481548110611db757611db761247e565b906000526020600020018190555081856002018481548110611ddb57611ddb61247e565b6000918252602090912001555b50508080611df5906124aa565b915050611cf6565b61079281336001600854429015801590611e18575060085481115b8015611e335750600b54600954611e2f91906124de565b8111155b611ec45760405162461bcd60e51b815260206004820152605660248201527f52657761726473506f6f6c426173653a207374616b696e67206973206e6f742060448201527f73746172746564206f722069732066696e6973686564206f72206e6f20657874606482015275656e73696f6e2074616b696e6720696e20706c61636560501b608482015260a4016105f1565b6001600160a01b0383166000908152601160205260409020600e546001820154611eef9087906124de565b11158015611f0c5750600f5485600154611f0991906124de565b11155b611f645760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a207374616b65206c696d69742072656160448201526318da195960e21b60648201526084016105f1565b60008511611fb45760405162461bcd60e51b815260206004820152601f60248201527f52657761726473506f6f6c426173653a2063616e6e6f74207374616b6520300060448201526064016105f1565b6001810154611fc1578181555b611fc9610e58565b611fd284611c73565b848160010154611fe291906124de565b816001018190555084600154611ff891906124de565b60015560055460005b8181101561207c57670de0b6b3a7640000600d82815481106120255761202561247e565b9060005260206000200154846001015461203f919061250d565b612049919061252c565b83600201828154811061205e5761205e61247e565b60009182526020909120015580612074816124aa565b915050612001565b50846001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d876040516120b891815260200190565b60405180910390a26120e4846120ce57336120d0565b855b6006546001600160a01b03169030896120ec565b505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108a79085906323b872dd60e01b906084016110b8565b508054600082559060005260206000209081019061079291906121c8565b82805482825590600052602060002090810192821561217d579160200282015b8281111561217d578235825591602001919060010190612162565b506121899291506121c8565b5090565b82805482825590600052602060002090810192821561217d579160200282015b8281111561217d5782518255916020019190600101906121ad565b5b8082111561218957600081556001016121c9565b80356001600160a01b03811681146121f457600080fd5b919050565b60006020828403121561220b57600080fd5b612214826121dd565b9392505050565b60005b8381101561223657818101518382015260200161221e565b838111156108a75750506000910152565b602081526000825180602084015261226681604085016020870161221b565b601f01601f19169190910160400192915050565b60006020828403121561228c57600080fd5b5035919050565b60008083601f8401126122a557600080fd5b50813567ffffffffffffffff8111156122bd57600080fd5b6020830191508360208260051b85010111156122d857600080fd5b9250929050565b6000806000604084860312156122f457600080fd5b83359250602084013567ffffffffffffffff81111561231257600080fd5b61231e86828701612293565b9497909650939450505050565b6000806000806060858703121561234157600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561236657600080fd5b61237287828801612293565b95989497509550505050565b6000806040838503121561239157600080fd5b61239a836121dd565b91506123a8602084016121dd565b90509250929050565b6000806000606084860312156123c657600080fd5b6123cf846121dd565b95602085013595506040909401359392505050565b600080604083850312156123f757600080fd5b612400836121dd565b946020939093013593505050565b600181811c9082168061242257607f821691505b6020821081141561244357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156124be576124be612494565b5060010190565b6000602082840312156124d757600080fd5b5051919050565b600082198211156124f1576124f1612494565b500190565b60008282101561250857612508612494565b500390565b600081600019048311821515161561252757612527612494565b500290565b60008261254957634e487b7160e01b600052601260045260246000fd5b500490565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b8181101561259a5784548352600194850194928401920161257e565b509098975050505050505050565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561259a578451835293830193918301916001016125d3565b6000825161260181846020870161221b565b9190910192915050565b60006020828403121561261d57600080fd5b8151801515811461221457600080fdfea2646970667358221220507628d9569406e5594dd855e395ee39faf92db0896e39e3a83b0428f207bdd864736f6c63430008090033";

type CompoundingRewardsPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundingRewardsPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundingRewardsPool__factory extends ContractFactory {
  constructor(...args: CompoundingRewardsPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardsTokens: string[],
    _staker: string,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundingRewardsPool> {
    return super.deploy(
      _stakingToken,
      _rewardsTokens,
      _staker,
      _name,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<CompoundingRewardsPool>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardsTokens: string[],
    _staker: string,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardsTokens,
      _staker,
      _name,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): CompoundingRewardsPool {
    return super.attach(address) as CompoundingRewardsPool;
  }
  connect(signer: Signer): CompoundingRewardsPool__factory {
    return super.connect(signer) as CompoundingRewardsPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundingRewardsPoolInterface {
    return new utils.Interface(_abi) as CompoundingRewardsPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundingRewardsPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundingRewardsPool;
  }
}
