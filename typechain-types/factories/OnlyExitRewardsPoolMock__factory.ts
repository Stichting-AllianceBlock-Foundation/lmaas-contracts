/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OnlyExitRewardsPoolMock,
  OnlyExitRewardsPoolMockInterface,
} from "../OnlyExitRewardsPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_rewardsTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_stakeLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contractStakeLimit",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newRewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Extended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accumulatedRewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extensionRewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardTokenIndex",
        type: "uint256",
      },
    ],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "getUserAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserOwedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRewardDebtLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserTokensOwedLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasStakingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRewardMultipliers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "firstStakedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawExcessRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f8338038062002f83833981016040819052620000349162000507565b8785858585856200004533620002b0565b6001600160a01b038616620000b05760405162461bcd60e51b815260206004820152602660248201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b696e67604482015265103a37b5b2b760d11b60648201526084015b60405180910390fd5b8315801590620000bf57508215155b620001195760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b65206c6044820152631a5b5a5d60e21b6064820152608401620000a7565b6000855111620001785760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20656d7074792072657761726473546f6044820152636b656e7360e01b6064820152608401620000a7565b600680546001600160a01b0319166001600160a01b0388161790558451620001a890600590602088019062000300565b50600e849055600f839055600780546001600160a01b0319166001600160a01b03831617905560005b6005548110156200028557600d8054600181810190925560007fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5909101819055600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910155806200027c8162000643565b915050620001d1565b5081516200029b9060109060208501906200036a565b505050505050505050505050505050620006aa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000358579160200282015b828111156200035857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000321565b5062000366929150620003e7565b5090565b82805462000378906200066d565b90600052602060002090601f0160209004810192826200039c576000855562000358565b82601f10620003b757805160ff191683800117855562000358565b8280016001018555821562000358579182015b8281111562000358578251825591602001919060010190620003ca565b5b80821115620003665760008155600101620003e8565b6001600160a01b03811681146200041457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000458576200045862000417565b604052919050565b80516200046d81620003fe565b919050565b600082601f8301126200048457600080fd5b81516001600160401b03811115620004a057620004a062000417565b6020620004b6601f8301601f191682016200042d565b8281528582848701011115620004cb57600080fd5b60005b83811015620004eb578581018301518282018401528201620004ce565b83811115620004fd5760008385840101525b5095945050505050565b600080600080600080600080610100898b0312156200052557600080fd5b88516200053281620003fe565b60208a015160408b015160608c0151929a5090985096506001600160401b03808211156200055f57600080fd5b818b0191508b601f8301126200057457600080fd5b81518181111562000589576200058962000417565b8060051b6200059b602082016200042d565b9182526020818501810192908101908f841115620005b857600080fd5b6020860195505b83861015620005ea5785519250620005d783620003fe565b82825260209586019590910190620005bf565b809a505050505060808b0151955060a08b0151945060c08b01519150808211156200061457600080fd5b50620006238b828c0162000472565b9250506200063460e08a0162000460565b90509295985092959890939650565b60006000198214156200066657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200068257607f821691505b60208210811415620006a457634e487b7160e01b600052602260045260246000fd5b50919050565b6128c980620006ba6000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063817b1cd211610130578063c97559ce116100b8578063ea8a1af01161007c578063ea8a1af0146104b3578063f27d0264146104bb578063f2fde38b146104ce578063fb58cad1146104e1578063fd67fd7c146104f457600080fd5b8063c97559ce14610474578063ce41530214610487578063dd2da2201461049a578063e6fd48bc146104a2578063e9fad8ee146104ab57600080fd5b8063a522ad25116100ff578063a522ad251461041f578063a694fc3a14610432578063a85adeab14610445578063aabef0db1461044e578063b6d0dcd81461046157600080fd5b8063817b1cd2146103c6578063869d8ead146103cf5780638da5cb5b146103e2578063a1292aea146103f357600080fd5b80632e1a7d4d116101b3578063602e007a11610182578063602e007a146103595780636c32bf691461036c57806370a082311461037f578063715018a6146103ab57806372f702f3146103b357600080fd5b80632e1a7d4d1461031d57806345ef79af146103305780634e71d92d1461033957806357b4f01f1461034157600080fd5b80631959a002116101fa5780631959a002146102b35780632037424b146102ef5780632af9b070146102f85780632c3f455c146103025780632d9e88e11461031557600080fd5b806284c9271461022b57806303d1dae01461026a57806306fdde031461027357806317fcb39b14610288575b600080fd5b61025761023936600461239f565b6001600160a01b031660009081526011602052604090206002015490565b6040519081526020015b60405180910390f35b610257600f5481565b61027b610507565b60405161026191906123ed565b60075461029b906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b6102da6102c136600461239f565b6011602052600090815260409020805460019091015482565b60408051928352602083019190915201610261565b610257600b5481565b610300610595565b005b61030061031036600461239f565b6106bf565b600554610257565b61030061032b366004612420565b610756565b610257600e5481565b610300610762565b61034961076a565b6040519015158152602001610261565b610257610367366004612420565b610784565b61030061037a36600461244f565b6107a5565b61025761038d36600461239f565b6001600160a01b031660009081526011602052604090206001015490565b6103006109d5565b60065461029b906001600160a01b031681565b61025760015481565b6103006103dd366004612519565b610a09565b6000546001600160a01b031661029b565b61025761040136600461239f565b6001600160a01b031660009081526011602052604090206003015490565b61030061042d36600461259c565b610a45565b610300610440366004612420565b610c75565b61025760095481565b61025761045c366004612420565b610c81565b61029b61046f366004612420565b610e34565b6102576104823660046125cf565b610e5e565b610257610495366004612602565b610fb1565b610300610ff3565b61025760085481565b61030061108d565b610300611096565b6102576104c9366004612602565b611141565b6103006104dc36600461239f565b61116f565b6102576104ef366004612420565b611207565b610257610502366004612420565b611217565b601080546105149061262c565b80601f01602080910402602001604051908101604052809291908181526020018280546105409061262c565b801561058d5780601f106105625761010080835404028352916020019161058d565b820191906000526020600020905b81548152906001019060200180831161057057829003601f168201915b505050505081565b6000546001600160a01b031633146105c85760405162461bcd60e51b81526004016105bf90612667565b60405180910390fd5b6000600b54116106335760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a207468657265206973206e6f2065787460448201526f195b9cda5bdb881cd8da19591d5b195960821b60648201526084016105bf565b60095442106106aa5760405162461bcd60e51b815260206004820152603d60248201527f52657761726473506f6f6c426173653a2063616e6e6f742063616e63656c206560448201527f7874656e73696f6e20616674657220697420686173207374617274656400000060648201526084016105bf565b6000600b8190556106bd90600c906122ca565b565b6000546001600160a01b031633146106e95760405162461bcd60e51b81526004016105bf90612667565b60055460005b8181101561075157600061070282610c81565b9050801561073e5761073e8482600585815481106107225761072261269c565b6000918252602090912001546001600160a01b03169190611227565b5080610749816126c8565b9150506106ef565b505050565b61075f8161128a565b50565b6106bd6112f8565b60008060085411801561077f57506008544210155b905090565b600c818154811061079457600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146107cf5760405162461bcd60e51b81526004016105bf90612667565b600b54156108365760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a20746865726520697320616c7265616460448201526d3c9030b71032bc3a32b739b4b7b760911b60648201526084016105bf565b6000821161089f5760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a206475726174696f6e206d757374206260448201526f0652067726561746572207468616e20360841b60648201526084016105bf565b805160055481146108c25760405162461bcd60e51b81526004016105bf906126e3565b60095460006108d1858361272b565b905060005b8381101561098e57600061090484848885815181106108f7576108f761269c565b6020026020010151611366565b9050600061091183610c81565b9050818110156109795760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526c1c991cc81d1bc8195e1d195b99609a1b60648201526084016105bf565b50508080610986906126c8565b9150506108d6565b506009544211156109b4576109a460095461137f565b6109af828286611492565b6109ce565b600b85905583516109cc90600c9060208701906122e8565b505b5050505050565b6000546001600160a01b031633146109ff5760405162461bcd60e51b81526004016105bf90612667565b6106bd600061158e565b6000546001600160a01b03163314610a335760405162461bcd60e51b81526004016105bf90612667565b610a3f848484846115de565b50505050565b6000546001600160a01b03163314610a6f5760405162461bcd60e51b81526004016105bf90612667565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ab157600080fd5b505afa158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190612743565b905060008111610b3b5760405162461bcd60e51b815260206004820152601b60248201527f52657761726473506f6f6c426173653a206e6f2072657761726473000000000060448201526064016105bf565b6006546001600160a01b0383811691161415610bb05760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526d1039ba30b5b4b733903a37b5b2b760911b60648201526084016105bf565b60055460005b81811015610c605760058181548110610bd157610bd161269c565b6000918252602090912001546001600160a01b0385811691161415610c4e5760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526c103932bbb0b932103a37b5b2b760991b60648201526084016105bf565b80610c58816126c8565b915050610bb6565b50610a3f6001600160a01b0384168584611227565b61075f8133600161184f565b60008060058381548110610c9757610c9761269c565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a082319060240160206040518083038186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190612743565b905060085460001415610d31579392505050565b6000610d5f60085460095460048881548110610d4f57610d4f61269c565b9060005260206000200154611366565b600b5490915015610da5576000610d95600954600b54600954610d82919061272b565b600c8981548110610d4f57610d4f61269c565b9050610da1818361272b565b9150505b600060028681548110610dba57610dba61269c565b90600052602060002001548260038881548110610dd957610dd961269c565b9060005260206000200154610dee919061272b565b610df8919061275c565b610e02908461275c565b6006549091506001600160a01b0385811691161415610e2b57600154610e28908261275c565b90505b95945050505050565b60058181548110610e4457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806009548310610e7257600954610e74565b825b90506000600a5482610e86919061275c565b9050600060048681548110610e9d57610e9d61269c565b906000526020600020015482610eb39190612773565b90506000600154670de0b6b3a764000083610ece9190612773565b610ed89190612792565b9050600081600d8981548110610ef057610ef061269c565b9060005260206000200154610f05919061272b565b6001600160a01b038a166000908152601160205260408120600181015492935091670de0b6b3a764000090610f3b908590612773565b610f459190612792565b90506000826002018b81548110610f5e57610f5e61269c565b906000526020600020015482610f74919061275c565b905080836003018c81548110610f8c57610f8c61269c565b9060005260206000200154610fa1919061272b565b9c9b505050505050505050505050565b6001600160a01b038216600090815260116020526040812060038101805484908110610fdf57610fdf61269c565b906000526020600020015491505092915050565b60095442908111801561100857506000600b54115b156110845761101860095461137f565b611084600954600b5460095461102e919061272b565b600c80548060200260200160405190810160405280929190818152602001828054801561107a57602002820191906000526020600020905b815481526020019060010190808311611066575b5050505050611492565b61075f8161137f565b6106bd33611b2f565b6000546001600160a01b031633146110c05760405162461bcd60e51b81526004016105bf90612667565b60085442106111305760405162461bcd60e51b815260206004820152603660248201527f52657761726473506f6f6c426173653a204e6f207374617274207363686564756044820152751b1959081bdc88185b1c9958591e481cdd185c9d195960521b60648201526084016105bf565b600060088190556009819055600a55565b6001600160a01b038216600090815260116020526040812060028101805484908110610fdf57610fdf61269c565b6000546001600160a01b031633146111995760405162461bcd60e51b81526004016105bf90612667565b6001600160a01b0381166111fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bf565b61075f8161158e565b600d818154811061079457600080fd5b6004818154811061079457600080fd5b6040516001600160a01b03831660248201526044810182905261075190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b9d565b60405162461bcd60e51b815260206004820152603f60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420776974686472617760448201527f2066726f6d207468697320636f6e74726163742e204f6e6c7920657869742e0060648201526084016105bf565b60405162461bcd60e51b815260206004820152603c60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420636c61696d20667260448201527f6f6d207468697320636f6e74726163742e204f6e6c7920657869742e0000000060648201526084016105bf565b600080611373858561275c565b9050610e2b8184612773565b600a54811161138b5750565b6000600954821061139e576009546113a0565b815b90506000600a54826113b2919061275c565b9050806113be57505050565b6001546113cc5750600a5550565b60055460005b81811015611489576000600482815481106113ef576113ef61269c565b9060005260206000200154846114059190612773565b90506000600154670de0b6b3a7640000836114209190612773565b61142a9190612792565b905080600d84815481106114405761144061269c565b9060005260206000200154611455919061272b565b600d84815481106114685761146861269c565b60009182526020909120015550819050611481816126c8565b9150506113d2565b505050600a5550565b60045460005b8181101561151b5760006114be60085460095460048581548110610d4f57610d4f61269c565b905080600383815481106114d4576114d461269c565b90600052602060002001546114e9919061272b565b600383815481106114fc576114fc61269c565b6000918252602090912001555080611513816126c8565b915050611498565b50815161152f9060049060208501906122e8565b50600884905560098390556000600b81905561154d90600c906122ca565b7fd363ac13638f68e7284bc244076ff171a95616bfe30c8c7629980906a9db0363848484604051611580939291906127b4565b60405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6008541561162e5760405162461bcd60e51b815260206004820181905260248201527f52657761726473506f6f6c426173653a20616c7265616479207374617274656460448201526064016105bf565b42841015801561163d57508383115b6116975760405162461bcd60e51b815260206004820152602560248201527f52657761726473506f6f6c426173653a20696e76616c6964207374617274206f6044820152641c88195b9960da1b60648201526084016105bf565b60055481146116b85760405162461bcd60e51b81526004016105bf906126e3565b6116c460048383612333565b5060055460005b818110156117fb5760006116ed878760048581548110610d4f57610d4f61269c565b90506000600583815481106117045761170461269c565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561175057600080fd5b505afa158015611764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117889190612743565b9050818110156117e65760405162461bcd60e51b815260206004820152602360248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526272647360e81b60648201526084016105bf565b505080806117f3906126c8565b9150506116cb565b5060088590556009849055600a8590556040517f74e89788dfd5b96dd5e9c38139638937b89fc0d4863da5644783b5d7f876b87a906118409087908790600490612809565b60405180910390a15050505050565b600854429015801590611863575060085481115b801561187e5750600b5460095461187a919061272b565b8111155b61190f5760405162461bcd60e51b815260206004820152605660248201527f52657761726473506f6f6c426173653a207374616b696e67206973206e6f742060448201527f73746172746564206f722069732066696e6973686564206f72206e6f20657874606482015275656e73696f6e2074616b696e6720696e20706c61636560501b608482015260a4016105bf565b6001600160a01b0383166000908152601160205260409020600e54600182015461193a90879061272b565b111580156119575750600f5485600154611954919061272b565b11155b6119af5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a207374616b65206c696d69742072656160448201526318da195960e21b60648201526084016105bf565b600085116119ff5760405162461bcd60e51b815260206004820152601f60248201527f52657761726473506f6f6c426173653a2063616e6e6f74207374616b6520300060448201526064016105bf565b6001810154611a0c578181555b611a14610ff3565b611a1d84611d1d565b848160010154611a2d919061272b565b816001018190555084600154611a43919061272b565b60015560055460005b81811015611ac757670de0b6b3a7640000600d8281548110611a7057611a7061269c565b90600052602060002001548460010154611a8a9190612773565b611a949190612792565b836002018281548110611aa957611aa961269c565b60009182526020909120015580611abf816126c8565b915050611a4c565b50846001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d87604051611b0391815260200190565b60405180910390a26109cc84611b195733611b1b565b855b6006546001600160a01b0316903089611ea7565b6001600160a01b0381166000818152601160209081526040918290206001810154925192835292917f920bb94eb3842a728db98228c375ff6b00c5bc5a54fac6736155517a0a20a61a910160405180910390a2611b8b82611edf565b611b9981600101548361213b565b5050565b6001600160a01b0382163b611bf45760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740060448201526064016105bf565b600080836001600160a01b031683604051611c0f9190612855565b6000604051808303816000865af19150503d8060008114611c4c576040519150601f19603f3d011682016040523d82523d6000602084013e611c51565b606091505b509150915081611ca35760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016105bf565b805115610a3f5780806020019051810190611cbe9190612871565b610a3f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105bf565b6001600160a01b03811660009081526011602052604090206005546002820154611d8f5760005b81811015611d8d57600283018054600181810183556000928352602080842090920183905560038601805491820181558352908220015580611d85816126c8565b915050611d44565b505b6001820154611d9d57505050565b60005b81811015610a3f576000670de0b6b3a7640000600d8381548110611dc657611dc661269c565b90600052602060002001548560010154611de09190612773565b611dea9190612792565b90506000846002018381548110611e0357611e0361269c565b906000526020600020015482611e19919061275c565b90508015611e925780856003018481548110611e3757611e3761269c565b9060005260206000200154611e4c919061272b565b856003018481548110611e6157611e6161269c565b906000526020600020018190555081856002018481548110611e8557611e8561269c565b6000918252602090912001555b50508080611e9f906126c8565b915050611da0565b6040516001600160a01b0380851660248301528316604482015260648101829052610a3f9085906323b872dd60e01b90608401611253565b6001600160a01b0381166000908152601160205260409020611eff610ff3565b611f0882611d1d565b60055460005b81811015610a3f576000836003018281548110611f2d57611f2d61269c565b906000526020600020015490506000846003018381548110611f5157611f5161269c565b90600052602060002001819055508060028381548110611f7357611f7361269c565b9060005260206000200154611f88919061272b565b60028381548110611f9b57611f9b61269c565b9060005260206000200181905550846001600160a01b03167f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e8260058581548110611fe857611fe861269c565b60009182526020909120015460405161201d92916001600160a01b0316909182526001600160a01b0316602082015260400190565b60405180910390a2600754600580546001600160a01b0390921691849081106120485761204861269c565b6000918252602090912001546001600160a01b0316141561211057600582815481106120765761207661269c565b600091825260209091200154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156120c557600080fd5b505af11580156120d9573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f1935050505015801561210a573d6000803e3d6000fd5b50612128565b6121288582600585815481106107225761072261269c565b5080612133816126c8565b915050611f0e565b600082116121965760405162461bcd60e51b815260206004820152602260248201527f52657761726473506f6f6c426173653a2063616e6e6f74207769746864726177604482015261020360f41b60648201526084016105bf565b6001600160a01b03811660009081526011602052604090206121b6610ff3565b6121bf82611d1d565b8281600101546121cf919061275c565b8160010181905550826001546121e5919061275c565b60015560055460005b8181101561226f576000670de0b6b3a7640000600d83815481106122145761221461269c565b9060005260206000200154856001015461222e9190612773565b6122389190612792565b9050808460020183815481106122505761225061269c565b6000918252602090912001555080612267816126c8565b9150506121ee565b50826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5856040516122ab91815260200190565b60405180910390a2600654610a3f906001600160a01b03168486611227565b508054600082559060005260206000209081019061075f919061236e565b828054828255906000526020600020908101928215612323579160200282015b82811115612323578251825591602001919060010190612308565b5061232f92915061236e565b5090565b828054828255906000526020600020908101928215612323579160200282015b82811115612323578235825591602001919060010190612353565b5b8082111561232f576000815560010161236f565b80356001600160a01b038116811461239a57600080fd5b919050565b6000602082840312156123b157600080fd5b6123ba82612383565b9392505050565b60005b838110156123dc5781810151838201526020016123c4565b83811115610a3f5750506000910152565b602081526000825180602084015261240c8160408501602087016123c1565b601f01601f19169190910160400192915050565b60006020828403121561243257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561246257600080fd5b8235915060208084013567ffffffffffffffff8082111561248257600080fd5b818601915086601f83011261249657600080fd5b8135818111156124a8576124a8612439565b8060051b604051601f19603f830116810181811085821117156124cd576124cd612439565b6040529182528482019250838101850191898311156124eb57600080fd5b938501935b82851015612509578435845293850193928501926124f0565b8096505050505050509250929050565b6000806000806060858703121561252f57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561255557600080fd5b818701915087601f83011261256957600080fd5b81358181111561257857600080fd5b8860208260051b850101111561258d57600080fd5b95989497505060200194505050565b600080604083850312156125af57600080fd5b6125b883612383565b91506125c660208401612383565b90509250929050565b6000806000606084860312156125e457600080fd5b6125ed84612383565b95602085013595506040909401359392505050565b6000806040838503121561261557600080fd5b61261e83612383565b946020939093013593505050565b600181811c9082168061264057607f821691505b6020821081141561266157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156126dc576126dc6126b2565b5060010190565b60208082526028908201527f52657761726473506f6f6c426173653a20696e76616c69642072657761726450604082015267195c94d958dbdb9960c21b606082015260800190565b6000821982111561273e5761273e6126b2565b500190565b60006020828403121561275557600080fd5b5051919050565b60008282101561276e5761276e6126b2565b500390565b600081600019048311821515161561278d5761278d6126b2565b500290565b6000826127af57634e487b7160e01b600052601260045260246000fd5b500490565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b818110156127fb578451835293830193918301916001016127df565b509098975050505050505050565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b818110156127fb57845483526001948501949284019201612839565b600082516128678184602087016123c1565b9190910192915050565b60006020828403121561288357600080fd5b815180151581146123ba57600080fdfea264697066735822122054ebb1c3e067fbd9be18c282cf5579b14ee6eed7eb53fc9c6d78770cc216458364736f6c63430008090033";

type OnlyExitRewardsPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnlyExitRewardsPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnlyExitRewardsPoolMock__factory extends ContractFactory {
  constructor(...args: OnlyExitRewardsPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OnlyExitRewardsPoolMock> {
    return super.deploy(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<OnlyExitRewardsPoolMock>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): OnlyExitRewardsPoolMock {
    return super.attach(address) as OnlyExitRewardsPoolMock;
  }
  connect(signer: Signer): OnlyExitRewardsPoolMock__factory {
    return super.connect(signer) as OnlyExitRewardsPoolMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnlyExitRewardsPoolMockInterface {
    return new utils.Interface(_abi) as OnlyExitRewardsPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnlyExitRewardsPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnlyExitRewardsPoolMock;
  }
}
