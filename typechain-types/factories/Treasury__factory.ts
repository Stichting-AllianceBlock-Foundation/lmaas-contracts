/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_externalRewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addUniswapLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "externalRewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityDrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeUniswapLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "rewardPools",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "externalRewards",
        type: "uint256[]",
      },
    ],
    name: "returnLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "rewardPools",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620026b4380380620026b4833981810160405281019062000037919062000296565b620000576200004b620001b360201b60201c565b620001bb60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c19062000325565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200013d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001349062000347565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000466565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000290816200044c565b92915050565b60008060408385031215620002aa57600080fd5b6000620002ba858286016200027f565b9250506020620002cd858286016200027f565b9150509250929050565b6000620002e660258362000369565b9150620002f382620003ae565b604082019050919050565b60006200030d60288362000369565b91506200031a82620003fd565b604082019050919050565b600060208201905081810360008301526200034081620002d7565b9050919050565b600060208201905081810360008301526200036281620002fe565b9050919050565b600082825260208201905092915050565b600062000387826200038e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f54726561737572793a3a20556e697377617020726f757465722063616e6e6f7460008201527f2062652030000000000000000000000000000000000000000000000000000000602082015250565b7f54726561737572793a3a2045787465726e616c2072657761726420746f6b656e60008201527f206e6f7420736574000000000000000000000000000000000000000000000000602082015250565b62000457816200037a565b81146200046357600080fd5b50565b60805160601c60a05160601c6121f8620004bc600039600081816108330152818161087b015281816109c501528181610a1001528181610a580152610bac015260008181610633015261078d01526121f86000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063735de9f711610071578063735de9f7146101555780638da5cb5b146101735780639e281a9814610191578063a3d44c2e146101ad578063e2b2056c146101dd578063f2fde38b146101f9576100a9565b80632491b5f5146100ae578063333609b6146100ca578063364c9074146100e8578063658e96a314610119578063715018a61461014b575b600080fd5b6100c860048036038101906100c39190611814565b610215565b005b6100d261078b565b6040516100df9190611af3565b60405180910390f35b61010260048036038101906100fd919061169c565b6107af565b604051610110929190611d83565b60405180910390f35b610133600480360381019061012e919061173a565b61093f565b60405161014293929190611dac565b60405180910390f35b610153610b22565b005b61015d610baa565b60405161016a9190611c4d565b60405180910390f35b61017b610bce565b6040516101889190611af3565b60405180910390f35b6101ab60048036038101906101a691906117d8565b610bf7565b005b6101c760048036038101906101c2919061164a565b610ca2565b6040516101d49190611d68565b60405180910390f35b6101f760048036038101906101f29190611814565b610cba565b005b610213600480360381019061020e919061164a565b61100b565b005b61021d611103565b73ffffffffffffffffffffffffffffffffffffffff1661023b610bce565b73ffffffffffffffffffffffffffffffffffffffff1614610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028890611cc8565b60405180910390fd5b8181905084849050146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090611ca8565b60405180910390fd5b60005b84849050811015610784576000858583818110610322577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610337919061164a565b73ffffffffffffffffffffffffffffffffffffffff166372f702f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561037c57600080fd5b505afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b49190611673565b90506000600160008888868181106103f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061040a919061164a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060016000898987818110610486577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061049b919061164a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610551878785818110610515577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061052a919061164a565b828473ffffffffffffffffffffffffffffffffffffffff1661110b9092919063ffffffff16565b600085858581811061058c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013514156105a0575050610771565b6106778787858181106105dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105f1919061164a565b86868681811061062a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201357f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111919092919063ffffffff16565b8686848181106106b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906106c5919061164a565b73ffffffffffffffffffffffffffffffffffffffff166350afa34b868686818110610719577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161073c9190611d68565b600060405180830381600087803b15801561075657600080fd5b505af115801561076a573d6000803e3d6000fd5b5050505050505b808061077c90611eff565b9150506102dc565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806107ba611103565b73ffffffffffffffffffffffffffffffffffffffff166107d8610bce565b73ffffffffffffffffffffffffffffffffffffffff161461082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611cc8565b60405180910390fd5b6108797f0000000000000000000000000000000000000000000000000000000000000000878973ffffffffffffffffffffffffffffffffffffffff166111919092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663baa2abde8a8a898989308a6040518863ffffffff1660e01b81526004016108de9796959493929190611b37565b6040805180830381600087803b1580156108f757600080fd5b505af115801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f91906118db565b9150915097509795505050505050565b600080600061094c611103565b73ffffffffffffffffffffffffffffffffffffffff1661096a610bce565b73ffffffffffffffffffffffffffffffffffffffff16146109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790611cc8565b60405180910390fd5b610a0b7f0000000000000000000000000000000000000000000000000000000000000000898c73ffffffffffffffffffffffffffffffffffffffff166111919092919063ffffffff16565b610a567f0000000000000000000000000000000000000000000000000000000000000000888b73ffffffffffffffffffffffffffffffffffffffff166111919092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e8e337008b8b8b8b8b8b308c6040518963ffffffff1660e01b8152600401610abd989796959493929190611ba6565b606060405180830381600087803b158015610ad757600080fd5b505af1158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f9190611917565b9250925092509750975097945050505050565b610b2a611103565b73ffffffffffffffffffffffffffffffffffffffff16610b48610bce565b73ffffffffffffffffffffffffffffffffffffffff1614610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590611cc8565b60405180910390fd5b610ba860006112ef565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bff611103565b73ffffffffffffffffffffffffffffffffffffffff16610c1d610bce565b73ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a90611cc8565b60405180910390fd5b610c9e33828473ffffffffffffffffffffffffffffffffffffffff1661110b9092919063ffffffff16565b5050565b60016020528060005260406000206000915090505481565b610cc2611103565b73ffffffffffffffffffffffffffffffffffffffff16610ce0610bce565b73ffffffffffffffffffffffffffffffffffffffff1614610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d90611cc8565b60405180910390fd5b818190508484905014610d7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7590611ce8565b60405180910390fd5b60005b8484905081101561100457610e6a838383818110610dc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013560016000888886818110610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610e21919061164a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113b390919063ffffffff16565b60016000878785818110610ea7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610ebc919061164a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550848482818110610f33577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610f48919061164a565b73ffffffffffffffffffffffffffffffffffffffff166325d5971f848484818110610f9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b8152600401610fbf9190611d68565b600060405180830381600087803b158015610fd957600080fd5b505af1158015610fed573d6000803e3d6000fd5b505050508080610ffc90611eff565b915050610d81565b5050505050565b611013611103565b73ffffffffffffffffffffffffffffffffffffffff16611031610bce565b73ffffffffffffffffffffffffffffffffffffffff1614611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107e90611cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ee90611c68565b60405180910390fd5b611100816112ef565b50565b600033905090565b61118c8363a9059cbb60e01b848460405160240161112a929190611c24565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113c9565b505050565b600081148061122a575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016111d8929190611b0e565b60206040518083038186803b1580156111f057600080fd5b505afa158015611204573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122891906118b2565b145b611269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126090611d28565b60405180910390fd5b6112ea8363095ea7b360e01b8484604051602401611288929190611c24565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113c9565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836113c19190611e0a565b905092915050565b6113e88273ffffffffffffffffffffffffffffffffffffffff1661153a565b611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e90611d48565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161144f9190611adc565b6000604051808303816000865af19150503d806000811461148c576040519150601f19603f3d011682016040523d82523d6000602084013e611491565b606091505b5091509150816114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd90611c88565b60405180910390fd5b60008151111561153457808060200190518101906114f49190611889565b611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152a90611d08565b60405180910390fd5b5b50505050565b600080823b905060008111915050919050565b60008135905061155c8161217d565b92915050565b6000815190506115718161217d565b92915050565b60008083601f84011261158957600080fd5b8235905067ffffffffffffffff8111156115a257600080fd5b6020830191508360208202830111156115ba57600080fd5b9250929050565b60008083601f8401126115d357600080fd5b8235905067ffffffffffffffff8111156115ec57600080fd5b60208301915083602082028301111561160457600080fd5b9250929050565b60008151905061161a81612194565b92915050565b60008135905061162f816121ab565b92915050565b600081519050611644816121ab565b92915050565b60006020828403121561165c57600080fd5b600061166a8482850161154d565b91505092915050565b60006020828403121561168557600080fd5b600061169384828501611562565b91505092915050565b600080600080600080600060e0888a0312156116b757600080fd5b60006116c58a828b0161154d565b97505060206116d68a828b0161154d565b96505060406116e78a828b0161154d565b95505060606116f88a828b01611620565b94505060806117098a828b01611620565b93505060a061171a8a828b01611620565b92505060c061172b8a828b01611620565b91505092959891949750929550565b600080600080600080600060e0888a03121561175557600080fd5b60006117638a828b0161154d565b97505060206117748a828b0161154d565b96505060406117858a828b01611620565b95505060606117968a828b01611620565b94505060806117a78a828b01611620565b93505060a06117b88a828b01611620565b92505060c06117c98a828b01611620565b91505092959891949750929550565b600080604083850312156117eb57600080fd5b60006117f98582860161154d565b925050602061180a85828601611620565b9150509250929050565b6000806000806040858703121561182a57600080fd5b600085013567ffffffffffffffff81111561184457600080fd5b61185087828801611577565b9450945050602085013567ffffffffffffffff81111561186f57600080fd5b61187b878288016115c1565b925092505092959194509250565b60006020828403121561189b57600080fd5b60006118a98482850161160b565b91505092915050565b6000602082840312156118c457600080fd5b60006118d284828501611635565b91505092915050565b600080604083850312156118ee57600080fd5b60006118fc85828601611635565b925050602061190d85828601611635565b9150509250929050565b60008060006060848603121561192c57600080fd5b600061193a86828701611635565b935050602061194b86828701611635565b925050604061195c86828701611635565b9150509250925092565b61196f81611e60565b82525050565b600061198082611de3565b61198a8185611dee565b935061199a818560208601611ecc565b80840191505092915050565b6119af81611ea8565b82525050565b60006119c2602683611df9565b91506119cd82611f77565b604082019050919050565b60006119e5602083611df9565b91506119f082611fc6565b602082019050919050565b6000611a08603883611df9565b9150611a1382611fef565b604082019050919050565b6000611a2b602083611df9565b9150611a368261203e565b602082019050919050565b6000611a4e603283611df9565b9150611a5982612067565b604082019050919050565b6000611a71602a83611df9565b9150611a7c826120b6565b604082019050919050565b6000611a94603683611df9565b9150611a9f82612105565b604082019050919050565b6000611ab7601f83611df9565b9150611ac282612154565b602082019050919050565b611ad681611e9e565b82525050565b6000611ae88284611975565b915081905092915050565b6000602082019050611b086000830184611966565b92915050565b6000604082019050611b236000830185611966565b611b306020830184611966565b9392505050565b600060e082019050611b4c600083018a611966565b611b596020830189611966565b611b666040830188611acd565b611b736060830187611acd565b611b806080830186611acd565b611b8d60a0830185611966565b611b9a60c0830184611acd565b98975050505050505050565b600061010082019050611bbc600083018b611966565b611bc9602083018a611966565b611bd66040830189611acd565b611be36060830188611acd565b611bf06080830187611acd565b611bfd60a0830186611acd565b611c0a60c0830185611966565b611c1760e0830184611acd565b9998505050505050505050565b6000604082019050611c396000830185611966565b611c466020830184611acd565b9392505050565b6000602082019050611c6260008301846119a6565b92915050565b60006020820190508181036000830152611c81816119b5565b9050919050565b60006020820190508181036000830152611ca1816119d8565b9050919050565b60006020820190508181036000830152611cc1816119fb565b9050919050565b60006020820190508181036000830152611ce181611a1e565b9050919050565b60006020820190508181036000830152611d0181611a41565b9050919050565b60006020820190508181036000830152611d2181611a64565b9050919050565b60006020820190508181036000830152611d4181611a87565b9050919050565b60006020820190508181036000830152611d6181611aaa565b9050919050565b6000602082019050611d7d6000830184611acd565b92915050565b6000604082019050611d986000830185611acd565b611da56020830184611acd565b9392505050565b6000606082019050611dc16000830186611acd565b611dce6020830185611acd565b611ddb6040830184611acd565b949350505050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611e1582611e9e565b9150611e2083611e9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e5557611e54611f48565b5b828201905092915050565b6000611e6b82611e7e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611eb382611eba565b9050919050565b6000611ec582611e7e565b9050919050565b60005b83811015611eea578082015181840152602081019050611ecf565b83811115611ef9576000848401525b50505050565b6000611f0a82611e9e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f3d57611f3c611f48565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564600082015250565b7f72657475726e4c69717569646974793a3a20706f6f6c7320616e64206578746560008201527f726e616c20746f6b656e7320646f206e6f74206d617463680000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f77697468647261774c69717569646974793a3a20706f6f6c7320616e6420616d60008201527f6f756e747320646f206e6f74206d617463680000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400600082015250565b61218681611e60565b811461219157600080fd5b50565b61219d81611e72565b81146121a857600080fd5b50565b6121b481611e9e565b81146121bf57600080fd5b5056fea26469706673582212205fffb6bb70b1d77cc157cf1611ac6732ceeaaddc378230e8a40f13dbae1da2e664736f6c63430008040033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _uniswapRouter: string,
    _externalRewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(
      _uniswapRouter,
      _externalRewardToken,
      overrides || {}
    ) as Promise<Treasury>;
  }
  getDeployTransaction(
    _uniswapRouter: string,
    _externalRewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _uniswapRouter,
      _externalRewardToken,
      overrides || {}
    );
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
