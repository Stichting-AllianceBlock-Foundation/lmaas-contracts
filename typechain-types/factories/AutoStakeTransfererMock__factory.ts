/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AutoStakeTransfererMock,
  AutoStakeTransfererMockInterface,
} from "../AutoStakeTransfererMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldShareVaule",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShareValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferTo",
        type: "address",
      },
    ],
    name: "exitAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "receiversWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAutoStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IRewardsPoolBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_whitelisted",
        type: "bool",
      },
    ],
    name: "setReceiverWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valuePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a76400006009553480156200001d57600080fd5b5060405162001f3738038062001f37833981016040819052620000409162000241565b8282826200004e3362000077565b3360a0526001600160a01b0383166080526200006b8282620000c9565b50505050505062000286565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008211620001455760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e203000000000000000000060648201526084015b60405180910390fd5b60008111620001bd5760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e20300000000000000000000000000060648201526084016200013c565b600354158015620001ce5750600454155b620002365760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b60648201526084016200013c565b600391909155600455565b6000806000606084860312156200025757600080fd5b83516001600160a01b03811681146200026f57600080fd5b602085015160409095015190969495509392505050565b60805160a051611c53620002e46000396000610403015260008181610325015281816105d90152818161099e01528181610c3901528181610f40015281816112bb01528181611366015281816113fe01526114390152611c536000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806372f702f31161010f578063b01eb660116100a2578063d4c3eea011610071578063d4c3eea014610425578063e9fad8ee1461042e578063ee483cdf14610436578063f2fde38b1461043f57600080fd5b8063b01eb660146103e5578063b540652e146103ed578063c0a239e3146103f5578063c45a0155146103fe57600080fd5b806398cda7f8116100de57806398cda7f8146103a75780639d8e2177146103b0578063a694fc3a146103bf578063a861a7a3146103d257600080fd5b806372f702f3146103205780638da5cb5b1461034757806394f664171461035857806395805dad1461039457600080fd5b80633a98ef391161018757806366666aa91161015657806366666aa9146102c757806370a08231146102f2578063715018a6146103055780637211bbc91461030d57600080fd5b80633a98ef39146102995780634437152a146102a25780634ff3306f146102b5578063652053d9146102be57600080fd5b80632240e63c116101c35780632240e63c1461023f5780632711f72714610254578063363291dc1461025d5780633882f7421461029057600080fd5b806306fdde03146101ea5780631877bb5c146102085780631aa8506014610236575b600080fd5b6101f2610452565b6040516101ff91906118c9565b60405180910390f35b610228610216366004611918565b600d6020526000908152604090205481565b6040519081526020016101ff565b61022860005481565b61025261024d366004611918565b6104d8565b005b61022860055481565b61028061026b366004611918565b600e6020526000908152604090205460ff1681565b60405190151581526020016101ff565b610228600c5481565b610228600a5481565b6102526102b0366004611918565b610675565b61022860045481565b61022860035481565b6008546102da906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b610228610300366004611918565b61071a565b610252610759565b61022861031b36600461193a565b61078f565b6102da7f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b03166102da565b61037f610366366004611918565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101ff565b6102526103a236600461193a565b6107c7565b61022860015481565b610228670de0b6b3a764000081565b6102526103cd36600461193a565b6108e5565b6102526103e0366004611961565b6108f1565b610252610943565b6102526109cc565b61022860095481565b6102da7f000000000000000000000000000000000000000000000000000000000000000081565b610228600b5481565b6102526109e4565b61022860025481565b61025261044d366004611918565b610a85565b600854604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104d391908101906119ae565b905090565b6001600160a01b0381166000908152600e6020526040902054819060ff1661055c5760405162461bcd60e51b815260206004820152602c60248201527f65786974416e645472616e736665723a3a7265636569766572206973206e6f7460448201526b081dda1a5d195b1a5cdd195960a21b60648201526084015b60405180910390fd5b600054421161057d5760405162461bcd60e51b815260040161055390611a5b565b610585610b1d565b61058d610c07565b60006105983361071a565b9050806105a457505050565b336000908152600d6020526040902054600a546105c19190611ad9565b600a55336000908152600d60205260408120556106087f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168483610cf0565b604051633c323a1b60e01b8152336004820152602481018290526001600160a01b03841690633c323a1b90604401600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b50505050610670610c07565b505050565b6007546001600160a01b0316331461069f5760405162461bcd60e51b815260040161055390611af0565b6008546001600160a01b0316156106f85760405162461bcd60e51b815260206004820152601760248201527f52657761726420706f6f6c20616c7265616479207365740000000000000000006044820152606401610553565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d6020526040812054600954670de0b6b3a76400009161074991611b25565b6107539190611b5a565b92915050565b6007546001600160a01b031633146107835760405162461bcd60e51b815260040161055390611af0565b61078d6000610e47565b565b336000908152600660205260408120600281018054849081106107b4576107b4611b6e565b9060005260206000200154915050919050565b6007546001600160a01b031633146107f15760405162461bcd60e51b815260040161055390611af0565b6008546040805163a85adeab60e01b8152905183926001600160a01b03169163a85adeab916004808301926020929190829003018186803b15801561083557600080fd5b505afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190611b84565b146108d05760405162461bcd60e51b815260206004820152602d60248201527f456e642074696d657374616d70206973206e6f74207468652073616d6520617360448201526c081c995dd85c991cc81c1bdbdb609a1b6064820152608401610553565b6108d981610e99565b6108e281610eb1565b50565b6108e281336001610f16565b6007546001600160a01b0316331461091b5760405162461bcd60e51b815260040161055390611af0565b6001600160a01b0382166000908152600e60205260409020805460ff19168215151790555050565b60005442116109645760405162461bcd60e51b815260040161055390611a5b565b3360009081526006602052604090206001810154600c546109859190611ad9565b600c55604080516000808252602082019092526109c4917f00000000000000000000000000000000000000000000000000000000000000009190611059565b6108e2610c07565b6109d4610b1d565b6109dc610c07565b61078d6112a6565b6000544211610a055760405162461bcd60e51b815260040161055390611a5b565b610a0d610b1d565b610a15610c07565b6000610a203361071a565b905080610a2a5750565b336000908152600d6020526040902054600a54610a479190611ad9565b600a55336000908152600d6020526040812055600c54610a68908290611b9d565b600c556040805160008152602081019091526109c49082906114bc565b6007546001600160a01b03163314610aaf5760405162461bcd60e51b815260040161055390611af0565b6001600160a01b038116610b145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610553565b6108e281610e47565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b6057600080fd5b505afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b989190611b84565b1561078d57600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b50505050565b600a54610c21576000600b55670de0b6b3a7640000600955565b600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610c8357600080fd5b505afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb9190611b84565b610cc59190611ad9565b600b819055600a5490610ce190670de0b6b3a764000090611b25565b610ceb9190611b5a565b600955565b801580610d795750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610d3f57600080fd5b505afa158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d779190611b84565b155b610de45760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610553565b6040516001600160a01b03831660248201526044810182905261067090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115bc565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005819055600354610eab9082611b9d565b60015550565b428111610f115760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b6064820152608401610553565b600055565b610f1e610b1d565b610f26610c07565b610f6881610f345733610f36565b825b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690308661173c565b600954600090610f80670de0b6b3a764000086611b25565b610f8a9190611b5a565b905080600a54610f9a9190611b9d565b600a556001600160a01b0383166000908152600d6020526040902054610fc1908290611b9d565b6001600160a01b0384166000908152600d6020526040902055600954610fe5610c07565b836001600160a01b03167f6381ea17a5324d29cc015352644672ead5185c1c61a0d3a521eda97e35cec97e86848460095461101f8a61071a565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a26110526112a6565b5050505050565b336000908152600660205260409020805442116110c85760405162461bcd60e51b815260206004820152602760248201527f66696e616c697a65457869743a3a20547279696e6720746f206578697420746f6044820152666f206561726c7960c81b6064820152608401610553565b60018101805460009091556110e76001600160a01b0386163383611774565b60005b845181101561126557600083600201828154811061110a5761110a611b6e565b90600052602060002001549050600084600201838154811061112e5761112e611b6e565b9060005260206000200181905550846001600160a01b031686838151811061115857611158611b6e565b60200260200101516001600160a01b0316141561121b5785828151811061118157611181611b6e565b60200260200101516001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016111b691815260200190565b600060405180830381600087803b1580156111d057600080fd5b505af11580156111e4573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f19350505050158015611215573d6000803e3d6000fd5b50611252565b611252338288858151811061123257611232611b6e565b60200260200101516001600160a01b03166117749092919063ffffffff16565b508061125d81611bb5565b9150506110ea565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb059910160405180910390a15050505050565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d9190611b84565b1561078d57600c546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156113a857600080fd5b505afa1580156113bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e09190611b84565b6113ea9190611ad9565b600854909150611428906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691166000610cf0565b600854611462906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610cf0565b60085460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156114a857600080fd5b505af1158015611052573d6000803e3d6000fd5b80516114c833826117a4565b3360009081526006602052604090206114e084611804565b815560018101546114f2908590611b9d565b600182015560005b828110156115795783818151811061151457611514611b6e565b602002602001015182600201828154811061153157611531611b6e565b90600052602060002001546115469190611b9d565b82600201828154811061155b5761155b611b6e565b6000918252602090912001558061157181611bb5565b9150506114fa565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc910160405180910390a150505050565b6001600160a01b0382163b6116135760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374006044820152606401610553565b600080836001600160a01b03168360405161162e9190611bd0565b6000604051808303816000865af19150503d806000811461166b576040519150601f19603f3d011682016040523d82523d6000602084013e611670565b606091505b5091509150816116c25760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646044820152606401610553565b805115610c0157808060200190518101906116dd9190611bec565b610c015760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610553565b6040516001600160a01b0380851660248301528316604482015260648101829052610c019085906323b872dd60e01b90608401610e10565b6040516001600160a01b03831660248201526044810182905261067090849063a9059cbb60e01b90606401610e10565b6001600160a01b038216600090815260066020526040902060028101548214156117cd57505050565b60028101545b82811015610c01576002820180546001810182556000918252602082200155806117fc81611bb5565b9150506117d3565b600154600090429081111561185d576000600354600154836118269190611ad9565b6118309190611c09565b6003549091506118408284611ad9565b61184a9190611b9d565b6001819055600294909455509192915050565b8260025461186b9190611b9d565b6002556001549150600454600254106118975760035460015461188e9190611b9d565b60015560006002555b50919050565b60005b838110156118b85781810151838201526020016118a0565b83811115610c015750506000910152565b60208152600082518060208401526118e881604085016020870161189d565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461191357600080fd5b919050565b60006020828403121561192a57600080fd5b611933826118fc565b9392505050565b60006020828403121561194c57600080fd5b5035919050565b80151581146108e257600080fd5b6000806040838503121561197457600080fd5b61197d836118fc565b9150602083013561198d81611953565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156119c057600080fd5b815167ffffffffffffffff808211156119d857600080fd5b818401915084601f8301126119ec57600080fd5b8151818111156119fe576119fe611998565b604051601f8201601f19908116603f01168101908382118183101715611a2657611a26611998565b81604052828152876020848701011115611a3f57600080fd5b611a5083602083016020880161189d565b979650505050505050565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b600082821015611aeb57611aeb611ac3565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611b3f57611b3f611ac3565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611b6957611b69611b44565b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b9657600080fd5b5051919050565b60008219821115611bb057611bb0611ac3565b500190565b6000600019821415611bc957611bc9611ac3565b5060010190565b60008251611be281846020870161189d565b9190910192915050565b600060208284031215611bfe57600080fd5b815161193381611953565b600082611c1857611c18611b44565b50069056fea264697066735822122058e579498eac34ee9f7c583fbf62e60df342f85509e75828646d6a64e91f7df964736f6c63430008090033";

type AutoStakeTransfererMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoStakeTransfererMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoStakeTransfererMock__factory extends ContractFactory {
  constructor(...args: AutoStakeTransfererMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoStakeTransfererMock> {
    return super.deploy(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    ) as Promise<AutoStakeTransfererMock>;
  }
  getDeployTransaction(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    );
  }
  attach(address: string): AutoStakeTransfererMock {
    return super.attach(address) as AutoStakeTransfererMock;
  }
  connect(signer: Signer): AutoStakeTransfererMock__factory {
    return super.connect(signer) as AutoStakeTransfererMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoStakeTransfererMockInterface {
    return new utils.Interface(_abi) as AutoStakeTransfererMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoStakeTransfererMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AutoStakeTransfererMock;
  }
}
