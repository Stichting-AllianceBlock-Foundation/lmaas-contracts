/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ThrottledExitRewardsPoolMock,
  ThrottledExitRewardsPoolMockInterface,
} from "../ThrottledExitRewardsPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_rewardsTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_stakeLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contractStakeLimit",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newRewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Extended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accumulatedRewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extensionRewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardTokenIndex",
        type: "uint256",
      },
    ],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "getUserAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserOwedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRewardDebtLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserTokensOwedLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasStakingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRewardMultipliers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "firstStakedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawExcessRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620033c8380380620033c88339810160408190526200003491620006f6565b88868684846200004433620002bc565b6001600160a01b038516620000af5760405162461bcd60e51b815260206004820152602660248201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b696e67604482015265103a37b5b2b760d11b60648201526084015b60405180910390fd5b8215801590620000be57508115155b620001185760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b65206c6044820152631a5b5a5d60e21b6064820152608401620000a6565b6000845111620001775760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20656d7074792072657761726473546f6044820152636b656e7360e01b6064820152608401620000a6565b600680546001600160a01b0319166001600160a01b0387161790558351620001a790600590602087019062000501565b50600d839055600e82905560005b6005548110156200026957600c8054600181810190925560007fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909101819055600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101558062000260816200084a565b915050620001b5565b5080516200027f90600f9060208401906200056b565b5050505050506200029784846200030c60201b60201c565b620002a28762000480565b620002ad876200049a565b505050505050505050620008c0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008211620003845760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e20300000000000000000006064820152608401620000a6565b60008111620003fc5760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e2030000000000000000000000000006064820152608401620000a6565b6014541580156200040d5750601554155b620004755760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b6064820152608401620000a6565b601491909155601555565b601681905560145462000494908262000868565b60125550565b428111620004fc5760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b6064820152608401620000a6565b601155565b82805482825590600052602060002090810192821562000559579160200282015b828111156200055957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000522565b5062000567929150620005e8565b5090565b828054620005799062000883565b90600052602060002090601f0160209004810192826200059d576000855562000559565b82601f10620005b857805160ff191683800117855562000559565b8280016001018555821562000559579182015b8281111562000559578251825591602001919060010190620005cb565b5b80821115620005675760008155600101620005e9565b6001600160a01b03811681146200061557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000659576200065962000618565b604052919050565b600082601f8301126200067357600080fd5b81516001600160401b038111156200068f576200068f62000618565b6020620006a5601f8301601f191682016200062e565b8281528582848701011115620006ba57600080fd5b60005b83811015620006da578581018301518282018401528201620006bd565b83811115620006ec5760008385840101525b5095945050505050565b60008060008060008060008060006101208a8c0312156200071657600080fd5b89516200072381620005ff565b60208b015160408c015160608d0151929b5090995097506001600160401b03808211156200075057600080fd5b818c0191508c601f8301126200076557600080fd5b8151818111156200077a576200077a62000618565b6200078b60208260051b016200062e565b8082825260208201915060208360051b86010192508f831115620007ae57600080fd5b6020850194505b82851015620007dd578451620007cb81620005ff565b825260209485019490910190620007b5565b809a5050505060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c01519150808211156200081557600080fd5b50620008248c828d0162000661565b9150509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b600060001982141562000861576200086162000834565b5060010190565b600082198211156200087e576200087e62000834565b500190565b600181811c908216806200089857607f821691505b60208210811415620008ba57634e487b7160e01b600052602260045260246000fd5b50919050565b612af880620008d06000396000f3fe608060405234801561001057600080fd5b506004361061027e5760003560e01c8063817b1cd21161015c578063b6d0dcd8116100ce578063ea8a1af011610087578063ea8a1af014610567578063ee483cdf1461056f578063f27d026414610578578063f2fde38b1461058b578063fb58cad11461059e578063fd67fd7c146105b157600080fd5b8063b6d0dcd814610515578063c97559ce14610528578063ce4153021461053b578063dd2da2201461054e578063e6fd48bc14610556578063e9fad8ee1461055f57600080fd5b8063a1292aea11610120578063a1292aea1461049f578063a522ad25146104cb578063a694fc3a146104de578063a85adeab146104f1578063aabef0db146104fa578063b01eb6601461050d57600080fd5b8063817b1cd214610442578063869d8ead1461044b5780638da5cb5b1461045e57806394f664171461046f57806398cda7f81461049657600080fd5b806345ef79af116101f5578063652053d9116101b9578063652053d9146103b45780636c32bf69146103bd57806370a08231146103d0578063715018a6146103fc5780637211bbc91461040457806372f702f31461041757600080fd5b806345ef79af1461036f5780634e71d92d146103785780634ff3306f1461038057806357b4f01f14610389578063602e007a146103a157600080fd5b80632037424b116102475780632037424b146103255780632711f7271461032e5780632af9b070146103375780632c3f455c146103415780632d9e88e1146103545780632e1a7d4d1461035c57600080fd5b806284c9271461028357806303d1dae0146102c257806306fdde03146102cb5780631959a002146102e05780631aa850601461031c575b600080fd5b6102af610291366004612550565b6001600160a01b031660009081526010602052604090206002015490565b6040519081526020015b60405180910390f35b6102af600e5481565b6102d36105c4565b6040516102b9919061259e565b6103076102ee366004612550565b6010602052600090815260409020805460019091015482565b604080519283526020830191909152016102b9565b6102af60115481565b6102af600a5481565b6102af60165481565b61033f610652565b005b61033f61034f366004612550565b61077c565b6005546102af565b61033f61036a3660046125d1565b610813565b6102af600d5481565b61033f61081f565b6102af60155481565b610391610827565b60405190151581526020016102b9565b6102af6103af3660046125d1565b610841565b6102af60145481565b61033f6103cb366004612600565b610862565b6102af6103de366004612550565b6001600160a01b031660009081526010602052604090206001015490565b61033f610a92565b6102af6104123660046125d1565b610ac6565b60065461042a906001600160a01b031681565b6040516001600160a01b0390911681526020016102b9565b6102af60015481565b61033f6104593660046126ca565b610afe565b6000546001600160a01b031661042a565b61030761047d366004612550565b6017602052600090815260409020805460019091015482565b6102af60125481565b6102af6104ad366004612550565b6001600160a01b031660009081526010602052604090206003015490565b61033f6104d936600461274d565b610b3a565b61033f6104ec3660046125d1565b610d6a565b6102af60085481565b6102af6105083660046125d1565b610d76565b61033f610f29565b61042a6105233660046125d1565b610fb9565b6102af610536366004612780565b610fe3565b6102af6105493660046127b3565b611136565b61033f611178565b6102af60075481565b61033f611212565b61033f61121a565b6102af60135481565b6102af6105863660046127b3565b6112c5565b61033f610599366004612550565b6112f3565b6102af6105ac3660046125d1565b61138b565b6102af6105bf3660046125d1565b61139b565b600f80546105d1906127dd565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd906127dd565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b505050505081565b6000546001600160a01b031633146106855760405162461bcd60e51b815260040161067c90612812565b60405180910390fd5b6000600a54116106f05760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a207468657265206973206e6f2065787460448201526f195b9cda5bdb881cd8da19591d5b195960821b606482015260840161067c565b60085442106107675760405162461bcd60e51b815260206004820152603d60248201527f52657761726473506f6f6c426173653a2063616e6e6f742063616e63656c206560448201527f7874656e73696f6e206166746572206974206861732073746172746564000000606482015260840161067c565b6000600a81905561077a90600b9061247b565b565b6000546001600160a01b031633146107a65760405162461bcd60e51b815260040161067c90612812565b60055460005b8181101561080e5760006107bf82610d76565b905080156107fb576107fb8482600585815481106107df576107df612847565b6000918252602090912001546001600160a01b031691906113ab565b508061080681612873565b9150506107ac565b505050565b61081c8161140e565b50565b61077a61147c565b60008060075411801561083c57506007544210155b905090565b600b818154811061085157600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331461088c5760405162461bcd60e51b815260040161067c90612812565b600a54156108f35760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a20746865726520697320616c7265616460448201526d3c9030b71032bc3a32b739b4b7b760911b606482015260840161067c565b6000821161095c5760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a206475726174696f6e206d757374206260448201526f0652067726561746572207468616e20360841b606482015260840161067c565b8051600554811461097f5760405162461bcd60e51b815260040161067c9061288e565b600854600061098e85836128d6565b905060005b83811015610a4b5760006109c184848885815181106109b4576109b4612847565b60200260200101516114ea565b905060006109ce83610d76565b905081811015610a365760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526c1c991cc81d1bc8195e1d195b99609a1b606482015260840161067c565b50508080610a4390612873565b915050610993565b50600854421115610a7157610a61600854611503565b610a6c828286611616565b610a8b565b600a8590558351610a8990600b906020870190612499565b505b5050505050565b6000546001600160a01b03163314610abc5760405162461bcd60e51b815260040161067c90612812565b61077a6000611712565b33600090815260176020526040812060028101805484908110610aeb57610aeb612847565b9060005260206000200154915050919050565b6000546001600160a01b03163314610b285760405162461bcd60e51b815260040161067c90612812565b610b3484848484611762565b50505050565b6000546001600160a01b03163314610b645760405162461bcd60e51b815260040161067c90612812565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ba657600080fd5b505afa158015610bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bde91906128ee565b905060008111610c305760405162461bcd60e51b815260206004820152601b60248201527f52657761726473506f6f6c426173653a206e6f20726577617264730000000000604482015260640161067c565b6006546001600160a01b0383811691161415610ca55760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526d1039ba30b5b4b733903a37b5b2b760911b606482015260840161067c565b60055460005b81811015610d555760058181548110610cc657610cc6612847565b6000918252602090912001546001600160a01b0385811691161415610d435760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526c103932bbb0b932103a37b5b2b760991b606482015260840161067c565b80610d4d81612873565b915050610cab565b50610b346001600160a01b03841685846113ab565b61081c813360016119d3565b60008060058381548110610d8c57610d8c612847565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a082319060240160206040518083038186803b158015610dda57600080fd5b505afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1291906128ee565b905060075460001415610e26579392505050565b6000610e5460075460085460048881548110610e4457610e44612847565b90600052602060002001546114ea565b600a5490915015610e9a576000610e8a600854600a54600854610e7791906128d6565b600b8981548110610e4457610e44612847565b9050610e9681836128d6565b9150505b600060028681548110610eaf57610eaf612847565b90600052602060002001548260038881548110610ece57610ece612847565b9060005260206000200154610ee391906128d6565b610eed9190612907565b610ef79084612907565b6006549091506001600160a01b0385811691161415610f2057600154610f1d9082612907565b90505b95945050505050565b6011544211610f4a5760405162461bcd60e51b815260040161067c9061291e565b600654600580546040805160208084028201810190925282815261077a946001600160a01b03169390929091830182828015610faf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f91575b5050505050611cb3565b60058181548110610fc957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806008548310610ff757600854610ff9565b825b905060006009548261100b9190612907565b905060006004868154811061102257611022612847565b9060005260206000200154826110389190612986565b90506000600154670de0b6b3a7640000836110539190612986565b61105d91906129bb565b9050600081600c898154811061107557611075612847565b906000526020600020015461108a91906128d6565b6001600160a01b038a166000908152601060205260408120600181015492935091670de0b6b3a7640000906110c0908590612986565b6110ca91906129bb565b90506000826002018b815481106110e3576110e3612847565b9060005260206000200154826110f99190612907565b905080836003018c8154811061111157611111612847565b906000526020600020015461112691906128d6565b9c9b505050505050505050505050565b6001600160a01b03821660009081526010602052604081206003810180548490811061116457611164612847565b906000526020600020015491505092915050565b60085442908111801561118d57506000600a54115b156112095761119d600854611503565b611209600854600a546008546111b391906128d6565b600b8054806020026020016040519081016040528092919081815260200182805480156111ff57602002820191906000526020600020905b8154815260200190600101908083116111eb575b5050505050611616565b61081c81611503565b61077a611e16565b6000546001600160a01b031633146112445760405162461bcd60e51b815260040161067c90612812565b60075442106112b45760405162461bcd60e51b815260206004820152603660248201527f52657761726473506f6f6c426173653a204e6f207374617274207363686564756044820152751b1959081bdc88185b1c9958591e481cdd185c9d195960521b606482015260840161067c565b600060078190556008819055600955565b6001600160a01b03821660009081526010602052604081206002810180548490811061116457611164612847565b6000546001600160a01b0316331461131d5760405162461bcd60e51b815260040161067c90612812565b6001600160a01b0381166113825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067c565b61081c81611712565b600c818154811061085157600080fd5b6004818154811061085157600080fd5b6040516001600160a01b03831660248201526044810182905261080e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f49565b60405162461bcd60e51b815260206004820152603f60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420776974686472617760448201527f2066726f6d207468697320636f6e74726163742e204f6e6c7920657869742e00606482015260840161067c565b60405162461bcd60e51b815260206004820152603c60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420636c61696d20667260448201527f6f6d207468697320636f6e74726163742e204f6e6c7920657869742e00000000606482015260840161067c565b6000806114f78585612907565b9050610f208184612986565b600954811161150f5750565b6000600854821061152257600854611524565b815b90506000600954826115369190612907565b90508061154257505050565b600154611550575060095550565b60055460005b8181101561160d5760006004828154811061157357611573612847565b9060005260206000200154846115899190612986565b90506000600154670de0b6b3a7640000836115a49190612986565b6115ae91906129bb565b905080600c84815481106115c4576115c4612847565b90600052602060002001546115d991906128d6565b600c84815481106115ec576115ec612847565b6000918252602090912001555081905061160581612873565b915050611556565b50505060095550565b60045460005b8181101561169f57600061164260075460085460048581548110610e4457610e44612847565b9050806003838154811061165857611658612847565b906000526020600020015461166d91906128d6565b6003838154811061168057611680612847565b600091825260209091200155508061169781612873565b91505061161c565b5081516116b3906004906020850190612499565b50600784905560088390556000600a8190556116d190600b9061247b565b7fd363ac13638f68e7284bc244076ff171a95616bfe30c8c7629980906a9db0363848484604051611704939291906129cf565b60405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600754156117b25760405162461bcd60e51b815260206004820181905260248201527f52657761726473506f6f6c426173653a20616c72656164792073746172746564604482015260640161067c565b4284101580156117c157508383115b61181b5760405162461bcd60e51b815260206004820152602560248201527f52657761726473506f6f6c426173653a20696e76616c6964207374617274206f6044820152641c88195b9960da1b606482015260840161067c565b600554811461183c5760405162461bcd60e51b815260040161067c9061288e565b611848600483836124e4565b5060055460005b8181101561197f576000611871878760048581548110610e4457610e44612847565b905060006005838154811061188857611888612847565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156118d457600080fd5b505afa1580156118e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190c91906128ee565b90508181101561196a5760405162461bcd60e51b815260206004820152602360248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526272647360e81b606482015260840161067c565b5050808061197790612873565b91505061184f565b506007859055600884905560098590556040517f74e89788dfd5b96dd5e9c38139638937b89fc0d4863da5644783b5d7f876b87a906119c49087908790600490612a24565b60405180910390a15050505050565b6007544290158015906119e7575060075481115b8015611a025750600a546008546119fe91906128d6565b8111155b611a935760405162461bcd60e51b815260206004820152605660248201527f52657761726473506f6f6c426173653a207374616b696e67206973206e6f742060448201527f73746172746564206f722069732066696e6973686564206f72206e6f20657874606482015275656e73696f6e2074616b696e6720696e20706c61636560501b608482015260a40161067c565b6001600160a01b0383166000908152601060205260409020600d546001820154611abe9087906128d6565b11158015611adb5750600e5485600154611ad891906128d6565b11155b611b335760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a207374616b65206c696d69742072656160448201526318da195960e21b606482015260840161067c565b60008511611b835760405162461bcd60e51b815260206004820152601f60248201527f52657761726473506f6f6c426173653a2063616e6e6f74207374616b65203000604482015260640161067c565b6001810154611b90578181555b611b98611178565b611ba1846120c9565b848160010154611bb191906128d6565b816001018190555084600154611bc791906128d6565b60015560055460005b81811015611c4b57670de0b6b3a7640000600c8281548110611bf457611bf4612847565b90600052602060002001548460010154611c0e9190612986565b611c1891906129bb565b836002018281548110611c2d57611c2d612847565b60009182526020909120015580611c4381612873565b915050611bd0565b50846001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d87604051611c8791815260200190565b60405180910390a2610a8984611c9d5733611c9f565b855b6006546001600160a01b0316903089612253565b33600090815260176020526040902080544211611d215760405162461bcd60e51b815260206004820152602660248201527f66696e616c697a65457869743a3a547279696e6720746f206578697420746f6f604482015265206561726c7960d01b606482015260840161067c565b6001810180546000909155611d406001600160a01b03851633836113ab565b60005b8351811015611ddf576000836002018281548110611d6357611d63612847565b906000526020600020015490506000846002018381548110611d8757611d87612847565b9060005260206000200181905550611dcc3382878581518110611dac57611dac612847565b60200260200101516001600160a01b03166113ab9092919063ffffffff16565b5080611dd781612873565b915050611d43565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb0599101611704565b6011544211611e375760405162461bcd60e51b815260040161067c9061291e565b336000908152601060205260409020611e4e611178565b6001810154611e5a5750565b611e63336120c9565b60018101546003820180546040805160208084028201810190925282815260009390929091830182828015611eb757602002820191906000526020600020905b815481526020019060010190808311611ea3575b5050505050905081600154611ecc9190612907565b600190815560009084018190555b600554811015611f3e576000846003018281548110611efb57611efb612847565b90600052602060002001819055506000846002018281548110611f2057611f20612847565b60009182526020909120015580611f3681612873565b915050611eda565b5061080e828261228b565b6001600160a01b0382163b611fa05760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015260640161067c565b600080836001600160a01b031683604051611fbb9190612a70565b6000604051808303816000865af19150503d8060008114611ff8576040519150601f19603f3d011682016040523d82523d6000602084013e611ffd565b606091505b50915091508161204f5760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015260640161067c565b805115610b34578080602001905181019061206a9190612a8c565b610b345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161067c565b6001600160a01b0381166000908152601060205260409020600554600282015461213b5760005b818110156121395760028301805460018181018355600092835260208084209092018390556003860180549182018155835290822001558061213181612873565b9150506120f0565b505b600182015461214957505050565b60005b81811015610b34576000670de0b6b3a7640000600c838154811061217257612172612847565b9060005260206000200154856001015461218c9190612986565b61219691906129bb565b905060008460020183815481106121af576121af612847565b9060005260206000200154826121c59190612907565b9050801561223e57808560030184815481106121e3576121e3612847565b90600052602060002001546121f891906128d6565b85600301848154811061220d5761220d612847565b90600052602060002001819055508185600201848154811061223157612231612847565b6000918252602090912001555b5050808061224b90612873565b91505061214c565b6040516001600160a01b0380851660248301528316604482015260648101829052610b349085906323b872dd60e01b906084016113d7565b80516122973382612382565b3360009081526017602052604090206122af846123e2565b815560018101546122c19085906128d6565b600182015560005b82811015612348578381815181106122e3576122e3612847565b602002602001015182600201828154811061230057612300612847565b906000526020600020015461231591906128d6565b82600201828154811061232a5761232a612847565b6000918252602090912001558061234081612873565b9150506122c9565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc9101611704565b6001600160a01b038216600090815260176020526040902060028101548214156123ab57505050565b60028101545b82811015610b34576002820180546001810182556000918252602082200155806123da81612873565b9150506123b1565b601254600090429081111561243b576000601454601254836124049190612907565b61240e9190612aae565b60145490915061241e8284612907565b61242891906128d6565b6012819055601394909455509192915050565b8260135461244991906128d6565b6013556012549150601554601354106124755760145460125461246c91906128d6565b60125560006013555b50919050565b508054600082559060005260206000209081019061081c919061251f565b8280548282559060005260206000209081019282156124d4579160200282015b828111156124d45782518255916020019190600101906124b9565b506124e092915061251f565b5090565b8280548282559060005260206000209081019282156124d4579160200282015b828111156124d4578235825591602001919060010190612504565b5b808211156124e05760008155600101612520565b80356001600160a01b038116811461254b57600080fd5b919050565b60006020828403121561256257600080fd5b61256b82612534565b9392505050565b60005b8381101561258d578181015183820152602001612575565b83811115610b345750506000910152565b60208152600082518060208401526125bd816040850160208701612572565b601f01601f19169190910160400192915050565b6000602082840312156125e357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561261357600080fd5b8235915060208084013567ffffffffffffffff8082111561263357600080fd5b818601915086601f83011261264757600080fd5b813581811115612659576126596125ea565b8060051b604051601f19603f8301168101818110858211171561267e5761267e6125ea565b60405291825284820192508381018501918983111561269c57600080fd5b938501935b828510156126ba578435845293850193928501926126a1565b8096505050505050509250929050565b600080600080606085870312156126e057600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561270657600080fd5b818701915087601f83011261271a57600080fd5b81358181111561272957600080fd5b8860208260051b850101111561273e57600080fd5b95989497505060200194505050565b6000806040838503121561276057600080fd5b61276983612534565b915061277760208401612534565b90509250929050565b60008060006060848603121561279557600080fd5b61279e84612534565b95602085013595506040909401359392505050565b600080604083850312156127c657600080fd5b6127cf83612534565b946020939093013593505050565b600181811c908216806127f157607f821691505b6020821081141561247557634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128875761288761285d565b5060010190565b60208082526028908201527f52657761726473506f6f6c426173653a20696e76616c69642072657761726450604082015267195c94d958dbdb9960c21b606082015260800190565b600082198211156128e9576128e961285d565b500190565b60006020828403121561290057600080fd5b5051919050565b6000828210156129195761291961285d565b500390565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b60008160001904831182151516156129a0576129a061285d565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826129ca576129ca6129a5565b500490565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015612a16578451835293830193918301916001016129fa565b509098975050505050505050565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b81811015612a1657845483526001948501949284019201612a54565b60008251612a82818460208701612572565b9190910192915050565b600060208284031215612a9e57600080fd5b8151801515811461256b57600080fd5b600082612abd57612abd6129a5565b50069056fea2646970667358221220764ce48aaaf672058730788a4d547d618678636826b64bf7dceb6a1f3e3ff1ea64736f6c63430008090033";

type ThrottledExitRewardsPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThrottledExitRewardsPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThrottledExitRewardsPoolMock__factory extends ContractFactory {
  constructor(...args: ThrottledExitRewardsPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    arg1: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ThrottledExitRewardsPoolMock> {
    return super.deploy(
      _stakingToken,
      arg1,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _throttleRoundSeconds,
      _throttleRoundCap,
      _contractStakeLimit,
      _name,
      overrides || {}
    ) as Promise<ThrottledExitRewardsPoolMock>;
  }
  getDeployTransaction(
    _stakingToken: string,
    arg1: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      arg1,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _throttleRoundSeconds,
      _throttleRoundCap,
      _contractStakeLimit,
      _name,
      overrides || {}
    );
  }
  attach(address: string): ThrottledExitRewardsPoolMock {
    return super.attach(address) as ThrottledExitRewardsPoolMock;
  }
  connect(signer: Signer): ThrottledExitRewardsPoolMock__factory {
    return super.connect(signer) as ThrottledExitRewardsPoolMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThrottledExitRewardsPoolMockInterface {
    return new utils.Interface(_abi) as ThrottledExitRewardsPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThrottledExitRewardsPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ThrottledExitRewardsPoolMock;
  }
}
