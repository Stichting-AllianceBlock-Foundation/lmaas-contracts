/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AutoStakeTransfererMock,
  AutoStakeTransfererMockInterface,
} from "../AutoStakeTransfererMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldShareVaule",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShareValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferTo",
        type: "address",
      },
    ],
    name: "exitAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "receiversWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAutoStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IRewardsPoolBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_whitelisted",
        type: "bool",
      },
    ],
    name: "setReceiverWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valuePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a76400006009553480156200001d57600080fd5b5060405162001e4c38038062001e4c833981016040819052620000409162000241565b8282826200004e3362000077565b3360a0526001600160a01b0383166080526200006b8282620000c9565b50505050505062000286565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008211620001455760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e203000000000000000000060648201526084015b60405180910390fd5b60008111620001bd5760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e20300000000000000000000000000060648201526084016200013c565b600354158015620001ce5750600454155b620002365760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b60648201526084016200013c565b600391909155600455565b6000806000606084860312156200025757600080fd5b83516001600160a01b03811681146200026f57600080fd5b602085015160409095015190969495509392505050565b60805160a051611b68620002e46000396000610403015260008181610325015281816105d90152818161099d01528181610c3701528181610f3e015281816111d9015281816112840152818161131c01526113570152611b686000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806372f702f31161010f578063b01eb660116100a2578063d4c3eea011610071578063d4c3eea014610425578063e9fad8ee1461042e578063ee483cdf14610436578063f2fde38b1461043f57600080fd5b8063b01eb660146103e5578063b540652e146103ed578063c0a239e3146103f5578063c45a0155146103fe57600080fd5b806398cda7f8116100de57806398cda7f8146103a75780639d8e2177146103b0578063a694fc3a146103bf578063a861a7a3146103d257600080fd5b806372f702f3146103205780638da5cb5b1461034757806394f664171461035857806395805dad1461039457600080fd5b80633a98ef391161018757806366666aa91161015657806366666aa9146102c757806370a08231146102f2578063715018a6146103055780637211bbc91461030d57600080fd5b80633a98ef39146102995780634437152a146102a25780634ff3306f146102b5578063652053d9146102be57600080fd5b80632240e63c116101c35780632240e63c1461023f5780632711f72714610254578063363291dc1461025d5780633882f7421461029057600080fd5b806306fdde03146101ea5780631877bb5c146102085780631aa8506014610236575b600080fd5b6101f2610452565b6040516101ff91906117de565b60405180910390f35b61022861021636600461182d565b600d6020526000908152604090205481565b6040519081526020016101ff565b61022860005481565b61025261024d36600461182d565b6104d8565b005b61022860055481565b61028061026b36600461182d565b600e6020526000908152604090205460ff1681565b60405190151581526020016101ff565b610228600c5481565b610228600a5481565b6102526102b036600461182d565b610675565b61022860045481565b61022860035481565b6008546102da906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b61022861030036600461182d565b61071a565b610252610759565b61022861031b36600461184f565b61078f565b6102da7f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b03166102da565b61037f61036636600461182d565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101ff565b6102526103a236600461184f565b6107c7565b61022860015481565b610228670de0b6b3a764000081565b6102526103cd36600461184f565b6108e5565b6102526103e0366004611876565b6108f1565b610252610943565b6102526109ca565b61022860095481565b6102da7f000000000000000000000000000000000000000000000000000000000000000081565b610228600b5481565b6102526109e2565b61022860025481565b61025261044d36600461182d565b610a83565b600854604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104d391908101906118c3565b905090565b6001600160a01b0381166000908152600e6020526040902054819060ff1661055c5760405162461bcd60e51b815260206004820152602c60248201527f65786974416e645472616e736665723a3a7265636569766572206973206e6f7460448201526b081dda1a5d195b1a5cdd195960a21b60648201526084015b60405180910390fd5b600054421161057d5760405162461bcd60e51b815260040161055390611970565b610585610b1b565b61058d610c05565b60006105983361071a565b9050806105a457505050565b336000908152600d6020526040902054600a546105c191906119ee565b600a55336000908152600d60205260408120556106087f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168483610cee565b604051633c323a1b60e01b8152336004820152602481018290526001600160a01b03841690633c323a1b90604401600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b50505050610670610c05565b505050565b6007546001600160a01b0316331461069f5760405162461bcd60e51b815260040161055390611a05565b6008546001600160a01b0316156106f85760405162461bcd60e51b815260206004820152601760248201527f52657761726420706f6f6c20616c7265616479207365740000000000000000006044820152606401610553565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d6020526040812054600954670de0b6b3a76400009161074991611a3a565b6107539190611a6f565b92915050565b6007546001600160a01b031633146107835760405162461bcd60e51b815260040161055390611a05565b61078d6000610e45565b565b336000908152600660205260408120600281018054849081106107b4576107b4611a83565b9060005260206000200154915050919050565b6007546001600160a01b031633146107f15760405162461bcd60e51b815260040161055390611a05565b6008546040805163a85adeab60e01b8152905183926001600160a01b03169163a85adeab916004808301926020929190829003018186803b15801561083557600080fd5b505afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190611a99565b146108d05760405162461bcd60e51b815260206004820152602d60248201527f456e642074696d657374616d70206973206e6f74207468652073616d6520617360448201526c081c995dd85c991cc81c1bdbdb609a1b6064820152608401610553565b6108d981610e97565b6108e281610eaf565b50565b6108e281336001610f14565b6007546001600160a01b0316331461091b5760405162461bcd60e51b815260040161055390611a05565b6001600160a01b0382166000908152600e60205260409020805460ff19168215151790555050565b60005442116109645760405162461bcd60e51b815260040161055390611970565b3360009081526006602052604090206001810154600c5461098591906119ee565b600c556040805160008152602081019091526109c2907f000000000000000000000000000000000000000000000000000000000000000090611057565b6108e2610c05565b6109d2610b1b565b6109da610c05565b61078d6111c4565b6000544211610a035760405162461bcd60e51b815260040161055390611970565b610a0b610b1b565b610a13610c05565b6000610a1e3361071a565b905080610a285750565b336000908152600d6020526040902054600a54610a4591906119ee565b600a55336000908152600d6020526040812055600c54610a66908290611ab2565b600c556040805160008152602081019091526109c29082906113da565b6007546001600160a01b03163314610aad5760405162461bcd60e51b815260040161055390611a05565b6001600160a01b038116610b125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610553565b6108e281610e45565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b5e57600080fd5b505afa158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190611a99565b1561078d57600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610beb57600080fd5b505af1158015610bff573d6000803e3d6000fd5b50505050565b600a54610c1f576000600b55670de0b6b3a7640000600955565b600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610c8157600080fd5b505afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb99190611a99565b610cc391906119ee565b600b819055600a5490610cdf90670de0b6b3a764000090611a3a565b610ce99190611a6f565b600955565b801580610d775750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610d3d57600080fd5b505afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190611a99565b155b610de25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610553565b6040516001600160a01b03831660248201526044810182905261067090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114d1565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005819055600354610ea99082611ab2565b60015550565b428111610f0f5760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b6064820152608401610553565b600055565b610f1c610b1b565b610f24610c05565b610f6681610f325733610f34565b825b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086611651565b600954600090610f7e670de0b6b3a764000086611a3a565b610f889190611a6f565b905080600a54610f989190611ab2565b600a556001600160a01b0383166000908152600d6020526040902054610fbf908290611ab2565b6001600160a01b0384166000908152600d6020526040902055600954610fe3610c05565b836001600160a01b03167f6381ea17a5324d29cc015352644672ead5185c1c61a0d3a521eda97e35cec97e86848460095461101d8a61071a565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a26110506111c4565b5050505050565b336000908152600660205260409020805442116110c55760405162461bcd60e51b815260206004820152602660248201527f66696e616c697a65457869743a3a547279696e6720746f206578697420746f6f604482015265206561726c7960d01b6064820152608401610553565b60018101805460009091556110e46001600160a01b0385163383611689565b60005b835181101561118357600083600201828154811061110757611107611a83565b90600052602060002001549050600084600201838154811061112b5761112b611a83565b9060005260206000200181905550611170338287858151811061115057611150611a83565b60200260200101516001600160a01b03166116899092919063ffffffff16565b508061117b81611aca565b9150506110e7565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb05991015b60405180910390a150505050565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561122357600080fd5b505afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125b9190611a99565b1561078d57600c546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156112c657600080fd5b505afa1580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190611a99565b61130891906119ee565b600854909150611346906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691166000610cee565b600854611380906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610cee565b60085460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156113c657600080fd5b505af1158015611050573d6000803e3d6000fd5b80516113e633826116b9565b3360009081526006602052604090206113fe84611719565b81556001810154611410908590611ab2565b600182015560005b828110156114975783818151811061143257611432611a83565b602002602001015182600201828154811061144f5761144f611a83565b90600052602060002001546114649190611ab2565b82600201828154811061147957611479611a83565b6000918252602090912001558061148f81611aca565b915050611418565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc91016111b6565b6001600160a01b0382163b6115285760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374006044820152606401610553565b600080836001600160a01b0316836040516115439190611ae5565b6000604051808303816000865af19150503d8060008114611580576040519150601f19603f3d011682016040523d82523d6000602084013e611585565b606091505b5091509150816115d75760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646044820152606401610553565b805115610bff57808060200190518101906115f29190611b01565b610bff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610553565b6040516001600160a01b0380851660248301528316604482015260648101829052610bff9085906323b872dd60e01b90608401610e0e565b6040516001600160a01b03831660248201526044810182905261067090849063a9059cbb60e01b90606401610e0e565b6001600160a01b038216600090815260066020526040902060028101548214156116e257505050565b60028101545b82811015610bff5760028201805460018101825560009182526020822001558061171181611aca565b9150506116e8565b60015460009042908111156117725760006003546001548361173b91906119ee565b6117459190611b1e565b60035490915061175582846119ee565b61175f9190611ab2565b6001819055600294909455509192915050565b826002546117809190611ab2565b6002556001549150600454600254106117ac576003546001546117a39190611ab2565b60015560006002555b50919050565b60005b838110156117cd5781810151838201526020016117b5565b83811115610bff5750506000910152565b60208152600082518060208401526117fd8160408501602087016117b2565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461182857600080fd5b919050565b60006020828403121561183f57600080fd5b61184882611811565b9392505050565b60006020828403121561186157600080fd5b5035919050565b80151581146108e257600080fd5b6000806040838503121561188957600080fd5b61189283611811565b915060208301356118a281611868565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156118d557600080fd5b815167ffffffffffffffff808211156118ed57600080fd5b818401915084601f83011261190157600080fd5b815181811115611913576119136118ad565b604051601f8201601f19908116603f0116810190838211818310171561193b5761193b6118ad565b8160405282815287602084870101111561195457600080fd5b6119658360208301602088016117b2565b979650505050505050565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b600082821015611a0057611a006119d8565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611a5457611a546119d8565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611a7e57611a7e611a59565b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611aab57600080fd5b5051919050565b60008219821115611ac557611ac56119d8565b500190565b6000600019821415611ade57611ade6119d8565b5060010190565b60008251611af78184602087016117b2565b9190910192915050565b600060208284031215611b1357600080fd5b815161184881611868565b600082611b2d57611b2d611a59565b50069056fea264697066735822122066c358c8160af4931049fbf3d7ed0769c44562f58c9973125f493040f40b99cf64736f6c63430008090033";

type AutoStakeTransfererMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoStakeTransfererMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoStakeTransfererMock__factory extends ContractFactory {
  constructor(...args: AutoStakeTransfererMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoStakeTransfererMock> {
    return super.deploy(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    ) as Promise<AutoStakeTransfererMock>;
  }
  getDeployTransaction(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    );
  }
  attach(address: string): AutoStakeTransfererMock {
    return super.attach(address) as AutoStakeTransfererMock;
  }
  connect(signer: Signer): AutoStakeTransfererMock__factory {
    return super.connect(signer) as AutoStakeTransfererMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoStakeTransfererMockInterface {
    return new utils.Interface(_abi) as AutoStakeTransfererMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoStakeTransfererMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AutoStakeTransfererMock;
  }
}
