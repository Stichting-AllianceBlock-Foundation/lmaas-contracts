/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundingRewardsPoolStaker,
  CompoundingRewardsPoolStakerInterface,
} from "../CompoundingRewardsPoolStaker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakeLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldShareVaule",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShareValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "delegateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transferTo",
        type: "address",
      },
    ],
    name: "exitAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "receiversWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAutoStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IRewardsPoolBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_whitelisted",
        type: "bool",
      },
    ],
    name: "setReceiverWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valuePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052670de0b6b3a76400006009553480156200001d57600080fd5b506040516200214b3803806200214b8339810160408190526200004091620002c2565b838383838383836200005233620000fc565b3360a0526001600160a01b0383166080526200006f82826200014e565b50505080620000eb5760405162461bcd60e51b815260206004820152603960248201527f4c696d697465644175746f5374616b653a636f6e7374727563746f723a3a737460448201527f616b65206c696d69742073686f756c64206e6f7420626520300000000000000060648201526084015b60405180910390fd5b60c052506200030f95505050505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008211620001c65760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e20300000000000000000006064820152608401620000e2565b600081116200023e5760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e2030000000000000000000000000006064820152608401620000e2565b6003541580156200024f5750600454155b620002b75760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b6064820152608401620000e2565b600391909155600455565b60008060008060808587031215620002d957600080fd5b84516001600160a01b0381168114620002f157600080fd5b60208601516040870151606090970151919890975090945092505050565b60805160a05160c051611dc662000385600039600081816102e3015281816106d701526110ab015260006104530152600081816103750152818161062901528181610a5401528181610cee0152818161127d01528181611328015281816113c0015281816113fb015261171f0152611dc66000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637211bbc91161011a578063a861a7a3116100ad578063c45a01551161007c578063c45a01551461044e578063d4c3eea014610475578063e9fad8ee1461047e578063ee483cdf14610486578063f2fde38b1461048f57600080fd5b8063a861a7a314610422578063b01eb66014610435578063b540652e1461043d578063c0a239e31461044557600080fd5b806395805dad116100e957806395805dad146103e457806398cda7f8146103f75780639d8e217714610400578063a694fc3a1461040f57600080fd5b80637211bbc91461035d57806372f702f3146103705780638da5cb5b1461039757806394f66417146103a857600080fd5b80633c323a1b11610192578063652053d911610161578063652053d91461030e57806366666aa91461031757806370a0823114610342578063715018a61461035557600080fd5b80633c323a1b146102b85780634437152a146102cb57806345ef79af146102de5780634ff3306f1461030557600080fd5b80632711f727116101ce5780632711f7271461026a578063363291dc146102735780633882f742146102a65780633a98ef39146102af57600080fd5b806306fdde03146102005780631877bb5c1461021e5780631aa850601461024c5780632240e63c14610255575b600080fd5b6102086104a2565b60405161021591906119ca565b60405180910390f35b61023e61022c366004611a19565b600d6020526000908152604090205481565b604051908152602001610215565b61023e60005481565b610268610263366004611a19565b610528565b005b61023e60055481565b610296610281366004611a19565b600e6020526000908152604090205460ff1681565b6040519015158152602001610215565b61023e600c5481565b61023e600a5481565b6102686102c6366004611a3b565b6106c6565b6102686102d9366004611a19565b61072f565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b61023e60045481565b61023e60035481565b60085461032a906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b61023e610350366004611a19565b6107d4565b610268610813565b61023e61036b366004611a65565b610849565b61032a7f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b031661032a565b6103cf6103b6366004611a19565b6006602052600090815260409020805460019091015482565b60408051928352602083019190915201610215565b6102686103f2366004611a65565b610881565b61023e60015481565b61023e670de0b6b3a764000081565b61026861041d366004611a65565b61099f565b610268610430366004611a8c565b6109a8565b6102686109fa565b610268610a81565b61023e60095481565b61032a7f000000000000000000000000000000000000000000000000000000000000000081565b61023e600b5481565b610268610a99565b61023e60025481565b61026861049d366004611a19565b610b3a565b600854604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105239190810190611ad9565b905090565b6001600160a01b0381166000908152600e6020526040902054819060ff166105ac5760405162461bcd60e51b815260206004820152602c60248201527f65786974416e645472616e736665723a3a7265636569766572206973206e6f7460448201526b081dda1a5d195b1a5cdd195960a21b60648201526084015b60405180910390fd5b60005442116105cd5760405162461bcd60e51b81526004016105a390611b86565b6105d5610bd2565b6105dd610cbc565b60006105e8336107d4565b9050806105f457505050565b336000908152600d6020526040902054600a546106119190611c04565b600a55336000908152600d60205260408120556106587f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168483610da5565b604051633c323a1b60e01b8152336004820152602481018290526001600160a01b03841690633c323a1b90604401600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050506106c0610cbc565b505b5050565b818160006106d3836107d4565b90507f00000000000000000000000000000000000000000000000000000000000000006107008383611c1b565b111561071e5760405162461bcd60e51b81526004016105a390611c33565b6107288585610efc565b5050505050565b6007546001600160a01b031633146107595760405162461bcd60e51b81526004016105a390611c7b565b6008546001600160a01b0316156107b25760405162461bcd60e51b815260206004820152601760248201527f52657761726420706f6f6c20616c72656164792073657400000000000000000060448201526064016105a3565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d6020526040812054600954670de0b6b3a76400009161080391611cb0565b61080d9190611ce5565b92915050565b6007546001600160a01b0316331461083d5760405162461bcd60e51b81526004016105a390611c7b565b6108476000610fcb565b565b3360009081526006602052604081206002810180548490811061086e5761086e611cf9565b9060005260206000200154915050919050565b6007546001600160a01b031633146108ab5760405162461bcd60e51b81526004016105a390611c7b565b6008546040805163a85adeab60e01b8152905183926001600160a01b03169163a85adeab916004808301926020929190829003018186803b1580156108ef57600080fd5b505afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190611d0f565b1461098a5760405162461bcd60e51b815260206004820152602d60248201527f456e642074696d657374616d70206973206e6f74207468652073616d6520617360448201526c081c995dd85c991cc81c1bdbdb609a1b60648201526084016105a3565b6109938161101d565b61099c81611035565b50565b61099c8161109a565b6007546001600160a01b031633146109d25760405162461bcd60e51b81526004016105a390611c7b565b6001600160a01b0382166000908152600e60205260409020805460ff19168215151790555050565b6000544211610a1b5760405162461bcd60e51b81526004016105a390611b86565b3360009081526006602052604090206001810154600c54610a3c9190611c04565b600c55604080516000815260208101909152610a79907f0000000000000000000000000000000000000000000000000000000000000000906110fb565b61099c610cbc565b610a89610bd2565b610a91610cbc565b610847611268565b6000544211610aba5760405162461bcd60e51b81526004016105a390611b86565b610ac2610bd2565b610aca610cbc565b6000610ad5336107d4565b905080610adf5750565b336000908152600d6020526040902054600a54610afc9190611c04565b600a55336000908152600d6020526040812055600c54610b1d908290611c1b565b600c55604080516000815260208101909152610a7990829061147e565b6007546001600160a01b03163314610b645760405162461bcd60e51b81526004016105a390611c7b565b6001600160a01b038116610bc95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a3565b61099c81610fcb565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4d9190611d0f565b1561084757600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ca257600080fd5b505af1158015610cb6573d6000803e3d6000fd5b50505050565b600a54610cd6576000600b55670de0b6b3a7640000600955565b600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610d3857600080fd5b505afa158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d709190611d0f565b610d7a9190611c04565b600b819055600a5490610d9690670de0b6b3a764000090611cb0565b610da09190611ce5565b600955565b801580610e2e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610df457600080fd5b505afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190611d0f565b155b610e995760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016105a3565b6040516001600160a01b0383166024820152604481018290526106c090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611575565b60008111610f5a5760405162461bcd60e51b815260206004820152602560248201527f5374616b6552656365697665724175746f5374616b653a204e6f207374616b65604482015264081cd95b9d60da1b60648201526084016105a3565b6001600160a01b038216610fbf5760405162461bcd60e51b815260206004820152602660248201527f5374616b6552656365697665724175746f5374616b653a20496e76616c69642060448201526539ba30b5b2b960d11b60648201526084016105a3565b6106c2818360006116f5565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600581905560035461102f9082611c1b565b60015550565b4281116110955760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b60648201526084016105a3565b600055565b338160006110a7836107d4565b90507f00000000000000000000000000000000000000000000000000000000000000006110d48383611c1b565b11156110f25760405162461bcd60e51b81526004016105a390611c33565b610cb684611831565b336000908152600660205260409020805442116111695760405162461bcd60e51b815260206004820152602660248201527f66696e616c697a65457869743a3a547279696e6720746f206578697420746f6f604482015265206561726c7960d01b60648201526084016105a3565b60018101805460009091556111886001600160a01b038516338361183d565b60005b83518110156112275760008360020182815481106111ab576111ab611cf9565b9060005260206000200154905060008460020183815481106111cf576111cf611cf9565b906000526020600020018190555061121433828785815181106111f4576111f4611cf9565b60200260200101516001600160a01b031661183d9092919063ffffffff16565b508061121f81611d28565b91505061118b565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb05991015b60405180910390a150505050565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156112c757600080fd5b505afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190611d0f565b1561084757600c546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561136a57600080fd5b505afa15801561137e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a29190611d0f565b6113ac9190611c04565b6008549091506113ea906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691166000610da5565b600854611424906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683610da5565b60085460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561146a57600080fd5b505af1158015610728573d6000803e3d6000fd5b805161148a338261186d565b3360009081526006602052604090206114a2846118cd565b815560018101546114b4908590611c1b565b600182015560005b8281101561153b578381815181106114d6576114d6611cf9565b60200260200101518260020182815481106114f3576114f3611cf9565b90600052602060002001546115089190611c1b565b82600201828154811061151d5761151d611cf9565b6000918252602090912001558061153381611d28565b9150506114bc565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc910161125a565b6001600160a01b0382163b6115cc5760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740060448201526064016105a3565b600080836001600160a01b0316836040516115e79190611d43565b6000604051808303816000865af19150503d8060008114611624576040519150601f19603f3d011682016040523d82523d6000602084013e611629565b606091505b50915091508161167b5760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016105a3565b805115610cb657808060200190518101906116969190611d5f565b610cb65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105a3565b6116fd610bd2565b611705610cbc565b611747816117135733611715565b825b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086611966565b60095460009061175f670de0b6b3a764000086611cb0565b6117699190611ce5565b905080600a546117799190611c1b565b600a556001600160a01b0383166000908152600d60205260409020546117a0908290611c1b565b6001600160a01b0384166000908152600d60205260409020556009546117c4610cbc565b836001600160a01b03167f6381ea17a5324d29cc015352644672ead5185c1c61a0d3a521eda97e35cec97e8684846009546117fe8a6107d4565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a2610728611268565b61099c813360016116f5565b6040516001600160a01b0383166024820152604481018290526106c090849063a9059cbb60e01b90606401610ec5565b6001600160a01b0382166000908152600660205260409020600281015482141561189657505050565b60028101545b82811015610cb6576002820180546001810182556000918252602082200155806118c581611d28565b91505061189c565b6001546000904290811115611926576000600354600154836118ef9190611c04565b6118f99190611d7c565b6003549091506119098284611c04565b6119139190611c1b565b6001819055600294909455509192915050565b826002546119349190611c1b565b600255600154915060045460025410611960576003546001546119579190611c1b565b60015560006002555b50919050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cb69085906323b872dd60e01b90608401610ec5565b60005b838110156119b95781810151838201526020016119a1565b83811115610cb65750506000910152565b60208152600082518060208401526119e981604085016020870161199e565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611a1457600080fd5b919050565b600060208284031215611a2b57600080fd5b611a34826119fd565b9392505050565b60008060408385031215611a4e57600080fd5b611a57836119fd565b946020939093013593505050565b600060208284031215611a7757600080fd5b5035919050565b801515811461099c57600080fd5b60008060408385031215611a9f57600080fd5b611aa8836119fd565b91506020830135611ab881611a7e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611aeb57600080fd5b815167ffffffffffffffff80821115611b0357600080fd5b818401915084601f830112611b1757600080fd5b815181811115611b2957611b29611ac3565b604051601f8201601f19908116603f01168101908382118183101715611b5157611b51611ac3565b81604052828152876020848701011115611b6a57600080fd5b611b7b83602083016020880161199e565b979650505050505050565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b600082821015611c1657611c16611bee565b500390565b60008219821115611c2e57611c2e611bee565b500190565b60208082526028908201527f6f6e6c79556e6465725374616b654c696d69743a3a5374616b65206c696d6974604082015267081c995858da195960c21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611cca57611cca611bee565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611cf457611cf4611ccf565b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611d2157600080fd5b5051919050565b6000600019821415611d3c57611d3c611bee565b5060010190565b60008251611d5581846020870161199e565b9190910192915050565b600060208284031215611d7157600080fd5b8151611a3481611a7e565b600082611d8b57611d8b611ccf565b50069056fea2646970667358221220fbf5c0fd0e75c47b8e7cc24461ebca212a5020bc807251c378ac25f52d678dc564736f6c63430008090033";

type CompoundingRewardsPoolStakerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundingRewardsPoolStakerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundingRewardsPoolStaker__factory extends ContractFactory {
  constructor(...args: CompoundingRewardsPoolStakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    _stakeLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundingRewardsPoolStaker> {
    return super.deploy(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      _stakeLimit,
      overrides || {}
    ) as Promise<CompoundingRewardsPoolStaker>;
  }
  getDeployTransaction(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    _stakeLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      _stakeLimit,
      overrides || {}
    );
  }
  attach(address: string): CompoundingRewardsPoolStaker {
    return super.attach(address) as CompoundingRewardsPoolStaker;
  }
  connect(signer: Signer): CompoundingRewardsPoolStaker__factory {
    return super.connect(signer) as CompoundingRewardsPoolStaker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundingRewardsPoolStakerInterface {
    return new utils.Interface(_abi) as CompoundingRewardsPoolStakerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundingRewardsPoolStaker {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundingRewardsPoolStaker;
  }
}
