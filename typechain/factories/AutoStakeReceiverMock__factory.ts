/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AutoStakeReceiverMock,
  AutoStakeReceiverMockInterface,
} from "../AutoStakeReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldShareVaule",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShareValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "delegateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAutoStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IRewardsPoolBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valuePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a76400006009553480156200001d57600080fd5b5060405162001cc138038062001cc1833981016040819052620000409162000241565b8282826200004e3362000077565b3360a0526001600160a01b0383166080526200006b8282620000c9565b50505050505062000286565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008211620001455760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e203000000000000000000060648201526084015b60405180910390fd5b60008111620001bd5760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e20300000000000000000000000000060648201526084016200013c565b600354158015620001ce5750600454155b620002365760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b60648201526084016200013c565b600391909155600455565b6000806000606084860312156200025757600080fd5b83516001600160a01b03811681146200026f57600080fd5b602085015160409095015190969495509392505050565b60805160a0516119e4620002dd60003960006103a70152600081816102dc0152818161082a015281816109d201528181610d5901528181610f0f01528181610fba01528181611052015261108d01526119e46000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806372f702f311610104578063b01eb660116100a2578063d4c3eea011610071578063d4c3eea0146103c9578063e9fad8ee146103d2578063ee483cdf146103da578063f2fde38b146103e357600080fd5b8063b01eb66014610389578063b540652e14610391578063c0a239e314610399578063c45a0155146103a257600080fd5b806395805dad116100de57806395805dad1461034b57806398cda7f81461035e5780639d8e217714610367578063a694fc3a1461037657600080fd5b806372f702f3146102d75780638da5cb5b146102fe57806394f664171461030f57600080fd5b80634437152a1161017157806366666aa91161014b57806366666aa91461027e57806370a08231146102a9578063715018a6146102bc5780637211bbc9146102c457600080fd5b80634437152a146102595780634ff3306f1461026c578063652053d91461027557600080fd5b80632711f727116101ad5780632711f727146102295780633882f742146102325780633a98ef391461023b5780633c323a1b1461024457600080fd5b806306fdde03146101d45780631877bb5c146101f25780631aa8506014610220575b600080fd5b6101dc6103f6565b6040516101e99190611670565b60405180910390f35b6102126102003660046116bf565b600d6020526000908152604090205481565b6040519081526020016101e9565b61021260005481565b61021260055481565b610212600c5481565b610212600a5481565b6102576102523660046116e1565b61047c565b005b6102576102673660046116bf565b610554565b61021260045481565b61021260035481565b600854610291906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102126102b73660046116bf565b6105f9565b610257610638565b6102126102d236600461170b565b61066e565b6102917f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b0316610291565b61033661031d3660046116bf565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101e9565b61025761035936600461170b565b6106a6565b61021260015481565b610212670de0b6b3a764000081565b61025761038436600461170b565b6107c4565b6102576107d0565b610257610857565b61021260095481565b6102917f000000000000000000000000000000000000000000000000000000000000000081565b610212600b5481565b61025761086f565b61021260025481565b6102576103f13660046116bf565b610910565b600854604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561043b57600080fd5b505afa15801561044f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610477919081019061173a565b905090565b600081116104df5760405162461bcd60e51b815260206004820152602560248201527f5374616b6552656365697665724175746f5374616b653a204e6f207374616b65604482015264081cd95b9d60da1b60648201526084015b60405180910390fd5b6001600160a01b0382166105445760405162461bcd60e51b815260206004820152602660248201527f5374616b6552656365697665724175746f5374616b653a20496e76616c69642060448201526539ba30b5b2b960d11b60648201526084016104d6565b610550818360006109a8565b5050565b6007546001600160a01b0316331461057e5760405162461bcd60e51b81526004016104d6906117e7565b6008546001600160a01b0316156105d75760405162461bcd60e51b815260206004820152601760248201527f52657761726420706f6f6c20616c72656164792073657400000000000000000060448201526064016104d6565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d6020526040812054600954670de0b6b3a76400009161062891611832565b6106329190611867565b92915050565b6007546001600160a01b031633146106625760405162461bcd60e51b81526004016104d6906117e7565b61066c6000610aeb565b565b336000908152600660205260408120600281018054849081106106935761069361187b565b9060005260206000200154915050919050565b6007546001600160a01b031633146106d05760405162461bcd60e51b81526004016104d6906117e7565b6008546040805163a85adeab60e01b8152905183926001600160a01b03169163a85adeab916004808301926020929190829003018186803b15801561071457600080fd5b505afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190611891565b146107af5760405162461bcd60e51b815260206004820152602d60248201527f456e642074696d657374616d70206973206e6f74207468652073616d6520617360448201526c081c995dd85c991cc81c1bdbdb609a1b60648201526084016104d6565b6107b881610b3d565b6107c181610b55565b50565b6107c1813360016109a8565b60005442116107f15760405162461bcd60e51b81526004016104d6906118aa565b3360009081526006602052604090206001810154600c546108129190611912565b600c5560408051600081526020810190915261084f907f000000000000000000000000000000000000000000000000000000000000000090610bba565b6107c1610d27565b61085f610e10565b610867610d27565b61066c610efa565b60005442116108905760405162461bcd60e51b81526004016104d6906118aa565b610898610e10565b6108a0610d27565b60006108ab336105f9565b9050806108b55750565b336000908152600d6020526040902054600a546108d29190611912565b600a55336000908152600d6020526040812055600c546108f3908290611929565b600c5560408051600081526020810190915261084f908290611110565b6007546001600160a01b0316331461093a5760405162461bcd60e51b81526004016104d6906117e7565b6001600160a01b03811661099f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d6565b6107c181610aeb565b6109b0610e10565b6109b8610d27565b6109fa816109c657336109c8565b825b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086611207565b600954600090610a12670de0b6b3a764000086611832565b610a1c9190611867565b905080600a54610a2c9190611929565b600a556001600160a01b0383166000908152600d6020526040902054610a53908290611929565b6001600160a01b0384166000908152600d6020526040902055600954610a77610d27565b836001600160a01b03167f6381ea17a5324d29cc015352644672ead5185c1c61a0d3a521eda97e35cec97e868484600954610ab18a6105f9565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a2610ae4610efa565b5050505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005819055600354610b4f9082611929565b60015550565b428111610bb55760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b60648201526084016104d6565b600055565b33600090815260066020526040902080544211610c285760405162461bcd60e51b815260206004820152602660248201527f66696e616c697a65457869743a3a547279696e6720746f206578697420746f6f604482015265206561726c7960d01b60648201526084016104d6565b6001810180546000909155610c476001600160a01b0385163383611272565b60005b8351811015610ce6576000836002018281548110610c6a57610c6a61187b565b906000526020600020015490506000846002018381548110610c8e57610c8e61187b565b9060005260206000200181905550610cd33382878581518110610cb357610cb361187b565b60200260200101516001600160a01b03166112729092919063ffffffff16565b5080610cde81611941565b915050610c4a565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb05991015b60405180910390a150505050565b600a54610d41576000600b55670de0b6b3a7640000600955565b600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610da357600080fd5b505afa158015610db7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb9190611891565b610de59190611912565b600b819055600a5490610e0190670de0b6b3a764000090611832565b610e0b9190611867565b600955565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610e5357600080fd5b505afa158015610e67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8b9190611891565b1561066c57600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b50505050565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610f5957600080fd5b505afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f919190611891565b1561066c57600c546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ffc57600080fd5b505afa158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110349190611891565b61103e9190611912565b60085490915061107c906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911660006112a7565b6008546110b6906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836112a7565b60085460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156110fc57600080fd5b505af1158015610ae4573d6000803e3d6000fd5b805161111c33826113cb565b3360009081526006602052604090206111348461142b565b81556001810154611146908590611929565b600182015560005b828110156111cd578381815181106111685761116861187b565b60200260200101518260020182815481106111855761118561187b565b906000526020600020015461119a9190611929565b8260020182815481106111af576111af61187b565b600091825260209091200155806111c581611941565b91505061114e565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc9101610d19565b6040516001600160a01b0380851660248301528316604482015260648101829052610ef49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114c4565b6040516001600160a01b0383166024820152604481018290526112a290849063a9059cbb60e01b9060640161123b565b505050565b8015806113305750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156112f657600080fd5b505afa15801561130a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132e9190611891565b155b61139b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104d6565b6040516001600160a01b0383166024820152604481018290526112a290849063095ea7b360e01b9060640161123b565b6001600160a01b038216600090815260066020526040902060028101548214156113f457505050565b60028101545b82811015610ef45760028201805460018101825560009182526020822001558061142381611941565b9150506113fa565b60015460009042908111156114845760006003546001548361144d9190611912565b611457919061195c565b6003549091506114678284611912565b6114719190611929565b6001819055600294909455509192915050565b826002546114929190611929565b6002556001549150600454600254106114be576003546001546114b59190611929565b60015560006002555b50919050565b6001600160a01b0382163b61151b5760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740060448201526064016104d6565b600080836001600160a01b0316836040516115369190611970565b6000604051808303816000865af19150503d8060008114611573576040519150601f19603f3d011682016040523d82523d6000602084013e611578565b606091505b5091509150816115ca5760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016104d6565b805115610ef457808060200190518101906115e5919061198c565b610ef45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d6565b60005b8381101561165f578181015183820152602001611647565b83811115610ef45750506000910152565b602081526000825180602084015261168f816040850160208701611644565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146116ba57600080fd5b919050565b6000602082840312156116d157600080fd5b6116da826116a3565b9392505050565b600080604083850312156116f457600080fd5b6116fd836116a3565b946020939093013593505050565b60006020828403121561171d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561174c57600080fd5b815167ffffffffffffffff8082111561176457600080fd5b818401915084601f83011261177857600080fd5b81518181111561178a5761178a611724565b604051601f8201601f19908116603f011681019083821181831017156117b2576117b2611724565b816040528281528760208487010111156117cb57600080fd5b6117dc836020830160208801611644565b979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561184c5761184c61181c565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261187657611876611851565b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156118a357600080fd5b5051919050565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b6000828210156119245761192461181c565b500390565b6000821982111561193c5761193c61181c565b500190565b60006000198214156119555761195561181c565b5060010190565b60008261196b5761196b611851565b500690565b60008251611982818460208701611644565b9190910192915050565b60006020828403121561199e57600080fd5b815180151581146116da57600080fdfea2646970667358221220d927afd4acbc281f4851df55d03cdd6f9ab53ca7744d9e74d88e8b8b9d6e3c7a64736f6c63430008090033";

type AutoStakeReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoStakeReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoStakeReceiverMock__factory extends ContractFactory {
  constructor(...args: AutoStakeReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoStakeReceiverMock> {
    return super.deploy(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    ) as Promise<AutoStakeReceiverMock>;
  }
  getDeployTransaction(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    );
  }
  attach(address: string): AutoStakeReceiverMock {
    return super.attach(address) as AutoStakeReceiverMock;
  }
  connect(signer: Signer): AutoStakeReceiverMock__factory {
    return super.connect(signer) as AutoStakeReceiverMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoStakeReceiverMockInterface {
    return new utils.Interface(_abi) as AutoStakeReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoStakeReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AutoStakeReceiverMock;
  }
}
