/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AutoStake, AutoStakeInterface } from "../AutoStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_throttleRoundCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ExitCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
    ],
    name: "ExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldShareVaule",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShareValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "completeExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exitInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "exitTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEndTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableExitTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAvailableRoundExitVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAutoStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract IRewardsPoolBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throttleRoundSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valuePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a76400006009553480156200001d57600080fd5b5060405162001b9238038062001b9283398101604081905262000040916200023b565b6200004b3362000071565b3360a0526001600160a01b038316608052620000688282620000c3565b50505062000280565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082116200013f5760405162461bcd60e51b815260206004820152603760248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64207365636f60448201527f6e6473206d757374206265206d6f7265207468616e203000000000000000000060648201526084015b60405180910390fd5b60008111620001b75760405162461bcd60e51b815260206004820152603360248201527f7365745468726f74746c653a3a7468726f74746c6520726f756e64206361702060448201527f6d757374206265206d6f7265207468616e203000000000000000000000000000606482015260840162000136565b600354158015620001c85750600454155b620002305760405162461bcd60e51b815260206004820152603160248201527f7365745468726f74746c653a3a7468726f74746c6520706172616d6574657273604482015270081dd95c9948185b1c9958591e481cd95d607a1b606482015260840162000136565b600391909155600455565b6000806000606084860312156200025157600080fd5b83516001600160a01b03811681146200026957600080fd5b602085015160409095015190969495509392505050565b60805160a0516118bb620002d760003960006103890152600081816102be0152818161073d015281816109b001528181610c6801528181610e1e01528181610ec901528181610f610152610f9c01526118bb6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063b540652e11610097578063d4c3eea011610071578063d4c3eea0146103ab578063e9fad8ee146103b4578063ee483cdf146103bc578063f2fde38b146103c557600080fd5b8063b540652e14610373578063c0a239e31461037b578063c45a01551461038457600080fd5b806398cda7f8116100d357806398cda7f8146103405780639d8e217714610349578063a694fc3a14610358578063b01eb6601461036b57600080fd5b80638da5cb5b146102e057806394f66417146102f157806395805dad1461032d57600080fd5b80634ff3306f1161016657806370a082311161014057806370a082311461028b578063715018a61461029e5780637211bbc9146102a657806372f702f3146102b957600080fd5b80634ff3306f1461024e578063652053d91461025757806366666aa91461026057600080fd5b80632711f727116101a25780632711f7271461021e5780633882f742146102275780633a98ef39146102305780634437152a1461023957600080fd5b806306fdde03146101c95780631877bb5c146101e75780631aa8506014610215575b600080fd5b6101d16103d8565b6040516101de919061157f565b60405180910390f35b6102076101f53660046115b2565b600d6020526000908152604090205481565b6040519081526020016101de565b61020760005481565b61020760055481565b610207600c5481565b610207600a5481565b61024c6102473660046115b2565b61045e565b005b61020760045481565b61020760035481565b600854610273906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b6102076102993660046115b2565b61050c565b61024c61054b565b6102076102b43660046115e2565b610581565b6102737f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b0316610273565b6103186102ff3660046115b2565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101de565b61024c61033b3660046115e2565b6105b9565b61020760015481565b610207670de0b6b3a764000081565b61024c6103663660046115e2565b6106d7565b61024c6106e3565b61024c61076a565b61020760095481565b6102737f000000000000000000000000000000000000000000000000000000000000000081565b610207600b5481565b61024c610782565b61020760025481565b61024c6103d33660046115b2565b610823565b600854604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561041d57600080fd5b505afa158015610431573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104599190810190611611565b905090565b6007546001600160a01b031633146104915760405162461bcd60e51b8152600401610488906116be565b60405180910390fd5b6008546001600160a01b0316156104ea5760405162461bcd60e51b815260206004820152601760248201527f52657761726420706f6f6c20616c7265616479207365740000000000000000006044820152606401610488565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d6020526040812054600954670de0b6b3a76400009161053b91611709565b610545919061173e565b92915050565b6007546001600160a01b031633146105755760405162461bcd60e51b8152600401610488906116be565b61057f60006108b7565b565b336000908152600660205260408120600281018054849081106105a6576105a6611752565b9060005260206000200154915050919050565b6007546001600160a01b031633146105e35760405162461bcd60e51b8152600401610488906116be565b6008546040805163a85adeab60e01b8152905183926001600160a01b03169163a85adeab916004808301926020929190829003018186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190611768565b146106c25760405162461bcd60e51b815260206004820152602d60248201527f456e642074696d657374616d70206973206e6f74207468652073616d6520617360448201526c081c995dd85c991cc81c1bdbdb609a1b6064820152608401610488565b6106cb81610909565b6106d481610921565b50565b6106d481336001610986565b60005442116107045760405162461bcd60e51b815260040161048890611781565b3360009081526006602052604090206001810154600c5461072591906117e9565b600c55604080516000815260208101909152610762907f000000000000000000000000000000000000000000000000000000000000000090610ac9565b6106d4610c36565b610772610d1f565b61077a610c36565b61057f610e09565b60005442116107a35760405162461bcd60e51b815260040161048890611781565b6107ab610d1f565b6107b3610c36565b60006107be3361050c565b9050806107c85750565b336000908152600d6020526040902054600a546107e591906117e9565b600a55336000908152600d6020526040812055600c54610806908290611800565b600c5560408051600081526020810190915261076290829061101f565b6007546001600160a01b0316331461084d5760405162461bcd60e51b8152600401610488906116be565b6001600160a01b0381166108b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610488565b6106d4815b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600581905560035461091b9082611800565b60015550565b4281116109815760405162461bcd60e51b815260206004820152602860248201527f6c6f636b3a3a4c6f636b20656e64206e6565647320746f20626520696e207468604482015267652066757475726560c01b6064820152608401610488565b600055565b61098e610d1f565b610996610c36565b6109d8816109a457336109a6565b825b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086611116565b6009546000906109f0670de0b6b3a764000086611709565b6109fa919061173e565b905080600a54610a0a9190611800565b600a556001600160a01b0383166000908152600d6020526040902054610a31908290611800565b6001600160a01b0384166000908152600d6020526040902055600954610a55610c36565b836001600160a01b03167f6381ea17a5324d29cc015352644672ead5185c1c61a0d3a521eda97e35cec97e868484600954610a8f8a61050c565b604080519586526020860194909452928401919091526060830152608082015260a00160405180910390a2610ac2610e09565b5050505050565b33600090815260066020526040902080544211610b375760405162461bcd60e51b815260206004820152602660248201527f66696e616c697a65457869743a3a547279696e6720746f206578697420746f6f604482015265206561726c7960d01b6064820152608401610488565b6001810180546000909155610b566001600160a01b0385163383611181565b60005b8351811015610bf5576000836002018281548110610b7957610b79611752565b906000526020600020015490506000846002018381548110610b9d57610b9d611752565b9060005260206000200181905550610be23382878581518110610bc257610bc2611752565b60200260200101516001600160a01b03166111819092919063ffffffff16565b5080610bed81611818565b915050610b59565b5060408051338152602081018390527f548aea05c5e3b6ba34acdf7b3ad06c7bb667ed71d1761e2c177167be0a9eb05991015b60405180910390a150505050565b600a54610c50576000600b55670de0b6b3a7640000600955565b600c546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610cb257600080fd5b505afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea9190611768565b610cf491906117e9565b600b819055600a5490610d1090670de0b6b3a764000090611709565b610d1a919061173e565b600955565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610d6257600080fd5b505afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a9190611768565b1561057f57600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b50505050565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610e6857600080fd5b505afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea09190611768565b1561057f57600c546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610f0b57600080fd5b505afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190611768565b610f4d91906117e9565b600854909150610f8b906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911660006111b6565b600854610fc5906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836111b6565b60085460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561100b57600080fd5b505af1158015610ac2573d6000803e3d6000fd5b805161102b33826112da565b3360009081526006602052604090206110438461133a565b81556001810154611055908590611800565b600182015560005b828110156110dc5783818151811061107757611077611752565b602002602001015182600201828154811061109457611094611752565b90600052602060002001546110a99190611800565b8260020182815481106110be576110be611752565b600091825260209091200155806110d481611818565b91505061105d565b5080546040805133815260208101929092527fd9217a461a0f7f84171a8866118c3d92e943ba7c1ba89b819371f729b5cabcbc9101610c28565b6040516001600160a01b0380851660248301528316604482015260648101829052610e039085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113d3565b6040516001600160a01b0383166024820152604481018290526111b190849063a9059cbb60e01b9060640161114a565b505050565b80158061123f5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561120557600080fd5b505afa158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190611768565b155b6112aa5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610488565b6040516001600160a01b0383166024820152604481018290526111b190849063095ea7b360e01b9060640161114a565b6001600160a01b0382166000908152600660205260409020600281015482141561130357505050565b60028101545b82811015610e035760028201805460018101825560009182526020822001558061133281611818565b915050611309565b60015460009042908111156113935760006003546001548361135c91906117e9565b6113669190611833565b60035490915061137682846117e9565b6113809190611800565b6001819055600294909455509192915050565b826002546113a19190611800565b6002556001549150600454600254106113cd576003546001546113c49190611800565b60015560006002555b50919050565b6001600160a01b0382163b61142a5760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374006044820152606401610488565b600080836001600160a01b0316836040516114459190611847565b6000604051808303816000865af19150503d8060008114611482576040519150601f19603f3d011682016040523d82523d6000602084013e611487565b606091505b5091509150816114d95760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646044820152606401610488565b805115610e0357808060200190518101906114f49190611863565b610e035760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610488565b60005b8381101561156e578181015183820152602001611556565b83811115610e035750506000910152565b602081526000825180602084015261159e816040850160208701611553565b601f01601f19169190910160400192915050565b6000602082840312156115c457600080fd5b81356001600160a01b03811681146115db57600080fd5b9392505050565b6000602082840312156115f457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561162357600080fd5b815167ffffffffffffffff8082111561163b57600080fd5b818401915084601f83011261164f57600080fd5b815181811115611661576116616115fb565b604051601f8201601f19908116603f01168101908382118183101715611689576116896115fb565b816040528281528760208487010111156116a257600080fd5b6116b3836020830160208801611553565b979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611723576117236116f3565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261174d5761174d611728565b500490565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561177a57600080fd5b5051919050565b60208082526042908201527f6f6e6c79556e6c6f636b65643a3a63616e6e6f7420706572666f726d2074686960408201527f7320616374696f6e20756e74696c2074686520656e64206f6620746865206c6f606082015261636b60f01b608082015260a00190565b6000828210156117fb576117fb6116f3565b500390565b60008219821115611813576118136116f3565b500190565b600060001982141561182c5761182c6116f3565b5060010190565b60008261184257611842611728565b500690565b60008251611859818460208701611553565b9190910192915050565b60006020828403121561187557600080fd5b815180151581146115db57600080fdfea2646970667358221220886a7e6adda2666e1d1f29bdbc66ab3eade34312182dfc9036efaf743aea1d3c64736f6c63430008090033";

type AutoStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoStake__factory extends ContractFactory {
  constructor(...args: AutoStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoStake> {
    return super.deploy(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    ) as Promise<AutoStake>;
  }
  getDeployTransaction(
    token: string,
    _throttleRoundSeconds: BigNumberish,
    _throttleRoundCap: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      _throttleRoundSeconds,
      _throttleRoundCap,
      overrides || {}
    );
  }
  attach(address: string): AutoStake {
    return super.attach(address) as AutoStake;
  }
  connect(signer: Signer): AutoStake__factory {
    return super.connect(signer) as AutoStake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoStakeInterface {
    return new utils.Interface(_abi) as AutoStakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoStake {
    return new Contract(address, _abi, signerOrProvider) as AutoStake;
  }
}
