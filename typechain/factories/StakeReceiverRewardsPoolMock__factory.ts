/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakeReceiverRewardsPoolMock,
  StakeReceiverRewardsPoolMockInterface,
} from "../StakeReceiverRewardsPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_rewardsTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_stakeLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contractStakeLimit",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newStartTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newRewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Extended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardsPerSecond",
        type: "uint256[]",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accumulatedRewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "delegateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extensionRewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardTokenIndex",
        type: "uint256",
      },
    ],
    name: "getAvailableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "getUserAccumulatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserOwedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserRewardDebtLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserTokensOwedLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasStakingStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Detailed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rewardPerSecond",
        type: "uint256[]",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRewardMultipliers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "firstStakedTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawExcessRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f5738038062002f578339810160408190526200003491620004e5565b8686868686868686848484846200004b33620002a0565b6001600160a01b038516620000b65760405162461bcd60e51b815260206004820152602660248201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b696e67604482015265103a37b5b2b760d11b60648201526084015b60405180910390fd5b8215801590620000c557508115155b6200011f5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20696e76616c6964207374616b65206c6044820152631a5b5a5d60e21b6064820152608401620000ad565b60008451116200017e5760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a20656d7074792072657761726473546f6044820152636b656e7360e01b6064820152608401620000ad565b600680546001600160a01b0319166001600160a01b0387161790558351620001ae906005906020870190620002f0565b50600d839055600e82905560005b6005548110156200027057600c8054600181810190925560007fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909101819055600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0181905560038054928301815581527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101558062000267816200060a565b915050620001bc565b5080516200028690600f9060208401906200035a565b505050505050505050505050505050505050505062000671565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000348579160200282015b828111156200034857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000311565b5062000356929150620003d7565b5090565b828054620003689062000634565b90600052602060002090601f0160209004810192826200038c576000855562000348565b82601f10620003a757805160ff191683800117855562000348565b8280016001018555821562000348579182015b8281111562000348578251825591602001919060010190620003ba565b5b80821115620003565760008155600101620003d8565b6001600160a01b03811681146200040457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000448576200044862000407565b604052919050565b600082601f8301126200046257600080fd5b81516001600160401b038111156200047e576200047e62000407565b602062000494601f8301601f191682016200041d565b8281528582848701011115620004a957600080fd5b60005b83811015620004c9578581018301518282018401528201620004ac565b83811115620004db5760008385840101525b5095945050505050565b600080600080600080600060e0888a0312156200050157600080fd5b87516200050e81620003ee565b60208981015160408b015160608c0151939a509098509650906001600160401b03808211156200053d57600080fd5b818b0191508b601f8301126200055257600080fd5b81518181111562000567576200056762000407565b8060051b620005788582016200041d565b918252838101850191858101908f8411156200059357600080fd5b948601945b83861015620005c15785519250620005b083620003ee565b828252948601949086019062000598565b809a505050505060808b0151955060a08b0151945060c08b0151925080831115620005eb57600080fd5b5050620005fb8a828b0162000450565b91505092959891949750929550565b60006000198214156200062d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200064957607f821691505b602082108114156200066b57634e487b7160e01b600052602260045260246000fd5b50919050565b6128d680620006816000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063817b1cd211610130578063c97559ce116100b8578063ea8a1af01161007c578063ea8a1af0146104b3578063f27d0264146104bb578063f2fde38b146104ce578063fb58cad1146104e1578063fd67fd7c146104f457600080fd5b8063c97559ce14610474578063ce41530214610487578063dd2da2201461049a578063e6fd48bc146104a2578063e9fad8ee146104ab57600080fd5b8063a522ad25116100ff578063a522ad251461041f578063a694fc3a14610432578063a85adeab14610445578063aabef0db1461044e578063b6d0dcd81461046157600080fd5b8063817b1cd2146103c6578063869d8ead146103cf5780638da5cb5b146103e2578063a1292aea146103f357600080fd5b80633c323a1b116101b3578063602e007a11610182578063602e007a146103415780636c32bf691461035457806370a0823114610367578063715018a61461039357806372f702f31461039b57600080fd5b80633c323a1b1461030557806345ef79af146103185780634e71d92d1461032157806357b4f01f1461032957600080fd5b80632037424b116101fa5780632037424b146102c45780632af9b070146102cd5780632c3f455c146102d75780632d9e88e1146102ea5780632e1a7d4d146102f257600080fd5b806284c9271461022b57806303d1dae01461026a57806306fdde03146102735780631959a00214610288575b600080fd5b6102576102393660046123ac565b6001600160a01b031660009081526010602052604090206002015490565b6040519081526020015b60405180910390f35b610257600e5481565b61027b610507565b60405161026191906123fa565b6102af6102963660046123ac565b6010602052600090815260409020805460019091015482565b60408051928352602083019190915201610261565b610257600a5481565b6102d5610595565b005b6102d56102e53660046123ac565b6106bf565b600554610257565b6102d561030036600461242d565b610756565b6102d5610313366004612446565b610762565b610257600d5481565b6102d5610830565b610331610838565b6040519015158152602001610261565b61025761034f36600461242d565b610852565b6102d5610362366004612486565b610873565b6102576103753660046123ac565b6001600160a01b031660009081526010602052604090206001015490565b6102d5610ab8565b6006546103ae906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b61025760015481565b6102d56103dd366004612550565b610aec565b6000546001600160a01b03166103ae565b6102576104013660046123ac565b6001600160a01b031660009081526010602052604090206003015490565b6102d561042d3660046125d3565b610b28565b6102d561044036600461242d565b610d58565b61025760085481565b61025761045c36600461242d565b610d64565b6103ae61046f36600461242d565b610f17565b610257610482366004612606565b610f41565b610257610495366004612446565b611094565b6102d56110d6565b61025760075481565b6102d5611170565b6102d5611179565b6102576104c9366004612446565b611224565b6102d56104dc3660046123ac565b611252565b6102576104ef36600461242d565b6112ea565b61025761050236600461242d565b6112fa565b600f805461051490612639565b80601f016020809104026020016040519081016040528092919081815260200182805461054090612639565b801561058d5780601f106105625761010080835404028352916020019161058d565b820191906000526020600020905b81548152906001019060200180831161057057829003601f168201915b505050505081565b6000546001600160a01b031633146105c85760405162461bcd60e51b81526004016105bf90612674565b60405180910390fd5b6000600a54116106335760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a207468657265206973206e6f2065787460448201526f195b9cda5bdb881cd8da19591d5b195960821b60648201526084016105bf565b60085442106106aa5760405162461bcd60e51b815260206004820152603d60248201527f52657761726473506f6f6c426173653a2063616e6e6f742063616e63656c206560448201527f7874656e73696f6e20616674657220697420686173207374617274656400000060648201526084016105bf565b6000600a8190556106bd90600b906122d7565b565b6000546001600160a01b031633146106e95760405162461bcd60e51b81526004016105bf90612674565b60055460005b8181101561075157600061070282610d64565b9050801561073e5761073e848260058581548110610722576107226126a9565b6000918252602090912001546001600160a01b0316919061130a565b5080610749816126d5565b9150506106ef565b505050565b61075f8161136d565b50565b600081116107be5760405162461bcd60e51b815260206004820152602360248201527f5374616b655265636569766572466561747572653a204e6f207374616b652073604482015262195b9d60ea1b60648201526084016105bf565b6001600160a01b0382166108205760405162461bcd60e51b8152602060048201526024808201527f5374616b655265636569766572466561747572653a20496e76616c696420737460448201526330b5b2b960e11b60648201526084016105bf565b61082c81836000611376565b5050565b6106bd61165e565b60008060075411801561084d57506007544210155b905090565b600b818154811061086257600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331461089d5760405162461bcd60e51b81526004016105bf90612674565b600a54156109045760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a20746865726520697320616c7265616460448201526d3c9030b71032bc3a32b739b4b7b760911b60648201526084016105bf565b6000821161096d5760405162461bcd60e51b815260206004820152603060248201527f52657761726473506f6f6c426173653a206475726174696f6e206d757374206260448201526f0652067726561746572207468616e20360841b60648201526084016105bf565b805160055481146109905760405162461bcd60e51b81526004016105bf906126f0565b600854429081116000816109a6576008546109a8565b825b905060006109b68783612738565b905060005b85811015610a735760006109e984848a85815181106109dc576109dc6126a9565b6020026020010151611666565b905060006109f683610d64565b905081811015610a5e5760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526c1c991cc81d1bc8195e1d195b99609a1b60648201526084016105bf565b50508080610a6b906126d5565b9150506109bb565b508215610a9557610a8560085461167f565b610a90828288611792565b610aaf565b600a8790558551610aad90600b9060208901906122f5565b505b50505050505050565b6000546001600160a01b03163314610ae25760405162461bcd60e51b81526004016105bf90612674565b6106bd600061188e565b6000546001600160a01b03163314610b165760405162461bcd60e51b81526004016105bf90612674565b610b22848484846118de565b50505050565b6000546001600160a01b03163314610b525760405162461bcd60e51b81526004016105bf90612674565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610b9457600080fd5b505afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190612750565b905060008111610c1e5760405162461bcd60e51b815260206004820152601b60248201527f52657761726473506f6f6c426173653a206e6f2072657761726473000000000060448201526064016105bf565b6006546001600160a01b0383811691161415610c935760405162461bcd60e51b815260206004820152602e60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526d1039ba30b5b4b733903a37b5b2b760911b60648201526084016105bf565b60055460005b81811015610d435760058181548110610cb457610cb46126a9565b6000918252602090912001546001600160a01b0385811691161415610d315760405162461bcd60e51b815260206004820152602d60248201527f52657761726473506f6f6c426173653a2063616e6e6f7420776974686472617760448201526c103932bbb0b932103a37b5b2b760991b60648201526084016105bf565b80610d3b816126d5565b915050610c99565b50610b226001600160a01b038416858461130a565b61075f81336001611376565b60008060058381548110610d7a57610d7a6126a9565b60009182526020822001546040516370a0823160e01b81523060048201526001600160a01b03909116925082906370a082319060240160206040518083038186803b158015610dc857600080fd5b505afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190612750565b905060075460001415610e14579392505050565b6000610e4260075460085460048881548110610e3257610e326126a9565b9060005260206000200154611666565b600a5490915015610e88576000610e78600854600a54600854610e659190612738565b600b8981548110610e3257610e326126a9565b9050610e848183612738565b9150505b600060028681548110610e9d57610e9d6126a9565b90600052602060002001548260038881548110610ebc57610ebc6126a9565b9060005260206000200154610ed19190612738565b610edb9190612769565b610ee59084612769565b6006549091506001600160a01b0385811691161415610f0e57600154610f0b9082612769565b90505b95945050505050565b60058181548110610f2757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806008548310610f5557600854610f57565b825b9050600060095482610f699190612769565b9050600060048681548110610f8057610f806126a9565b906000526020600020015482610f969190612780565b90506000600154670de0b6b3a764000083610fb19190612780565b610fbb919061279f565b9050600081600c8981548110610fd357610fd36126a9565b9060005260206000200154610fe89190612738565b6001600160a01b038a166000908152601060205260408120600181015492935091670de0b6b3a76400009061101e908590612780565b611028919061279f565b90506000826002018b81548110611041576110416126a9565b9060005260206000200154826110579190612769565b905080836003018c8154811061106f5761106f6126a9565b90600052602060002001546110849190612738565b9c9b505050505050505050505050565b6001600160a01b0382166000908152601060205260408120600381018054849081106110c2576110c26126a9565b906000526020600020015491505092915050565b6008544290811180156110eb57506000600a54115b15611167576110fb60085461167f565b611167600854600a546008546111119190612738565b600b80548060200260200160405190810160405280929190818152602001828054801561115d57602002820191906000526020600020905b815481526020019060010190808311611149575b5050505050611792565b61075f8161167f565b6106bd33611b4f565b6000546001600160a01b031633146111a35760405162461bcd60e51b81526004016105bf90612674565b60075442106112135760405162461bcd60e51b815260206004820152603660248201527f52657761726473506f6f6c426173653a204e6f207374617274207363686564756044820152751b1959081bdc88185b1c9958591e481cdd185c9d195960521b60648201526084016105bf565b600060078190556008819055600955565b6001600160a01b0382166000908152601060205260408120600281018054849081106110c2576110c26126a9565b6000546001600160a01b0316331461127c5760405162461bcd60e51b81526004016105bf90612674565b6001600160a01b0381166112e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bf565b61075f8161188e565b600c818154811061086257600080fd5b6004818154811061086257600080fd5b6040516001600160a01b03831660248201526044810182905261075190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611bb9565b61075f81611d39565b60075442901580159061138a575060075481115b80156113a55750600a546008546113a19190612738565b8111155b6114365760405162461bcd60e51b815260206004820152605660248201527f52657761726473506f6f6c426173653a207374616b696e67206973206e6f742060448201527f73746172746564206f722069732066696e6973686564206f72206e6f20657874606482015275656e73696f6e2074616b696e6720696e20706c61636560501b608482015260a4016105bf565b6001600160a01b0383166000908152601060205260409020600d546001820154611461908790612738565b1115801561147e5750600e548560015461147b9190612738565b11155b6114d65760405162461bcd60e51b8152602060048201526024808201527f52657761726473506f6f6c426173653a207374616b65206c696d69742072656160448201526318da195960e21b60648201526084016105bf565b600085116115265760405162461bcd60e51b815260206004820152601f60248201527f52657761726473506f6f6c426173653a2063616e6e6f74207374616b6520300060448201526064016105bf565b6001810154611533578181555b61153b6110d6565b61154484611da7565b8481600101546115549190612738565b81600101819055508460015461156a9190612738565b60015560055460005b818110156115ee57670de0b6b3a7640000600c8281548110611597576115976126a9565b906000526020600020015484600101546115b19190612780565b6115bb919061279f565b8360020182815481106115d0576115d06126a9565b600091825260209091200155806115e6816126d5565b915050611573565b50846001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8760405161162a91815260200190565b60405180910390a2611656846116405733611642565b855b6006546001600160a01b0316903089611f31565b505050505050565b6106bd611f69565b6000806116738585612769565b9050610f0e8184612780565b600954811161168b5750565b6000600854821061169e576008546116a0565b815b90506000600954826116b29190612769565b9050806116be57505050565b6001546116cc575060095550565b60055460005b81811015611789576000600482815481106116ef576116ef6126a9565b9060005260206000200154846117059190612780565b90506000600154670de0b6b3a7640000836117209190612780565b61172a919061279f565b905080600c8481548110611740576117406126a9565b90600052602060002001546117559190612738565b600c8481548110611768576117686126a9565b60009182526020909120015550819050611781816126d5565b9150506116d2565b50505060095550565b60045460005b8181101561181b5760006117be60075460085460048581548110610e3257610e326126a9565b905080600383815481106117d4576117d46126a9565b90600052602060002001546117e99190612738565b600383815481106117fc576117fc6126a9565b6000918252602090912001555080611813816126d5565b915050611798565b50815161182f9060049060208501906122f5565b50600784905560088390556000600a81905561184d90600b906122d7565b7fd363ac13638f68e7284bc244076ff171a95616bfe30c8c7629980906a9db0363848484604051611880939291906127c1565b60405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6007541561192e5760405162461bcd60e51b815260206004820181905260248201527f52657761726473506f6f6c426173653a20616c7265616479207374617274656460448201526064016105bf565b42841015801561193d57508383115b6119975760405162461bcd60e51b815260206004820152602560248201527f52657761726473506f6f6c426173653a20696e76616c6964207374617274206f6044820152641c88195b9960da1b60648201526084016105bf565b60055481146119b85760405162461bcd60e51b81526004016105bf906126f0565b6119c460048383612340565b5060055460005b81811015611afb5760006119ed878760048581548110610e3257610e326126a9565b9050600060058381548110611a0457611a046126a9565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611a5057600080fd5b505afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190612750565b905081811015611ae65760405162461bcd60e51b815260206004820152602360248201527f52657761726473506f6f6c426173653a206e6f7420656e6f756768207265776160448201526272647360e81b60648201526084016105bf565b50508080611af3906126d5565b9150506119cb565b506007859055600884905560098590556040517f74e89788dfd5b96dd5e9c38139638937b89fc0d4863da5644783b5d7f876b87a90611b409087908790600490612816565b60405180910390a15050505050565b6001600160a01b0381166000818152601060209081526040918290206001810154925192835292917f920bb94eb3842a728db98228c375ff6b00c5bc5a54fac6736155517a0a20a61a910160405180910390a2611bab82611fd7565b61082c816001015483612148565b6001600160a01b0382163b611c105760405162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740060448201526064016105bf565b600080836001600160a01b031683604051611c2b9190612862565b6000604051808303816000865af19150503d8060008114611c68576040519150601f19603f3d011682016040523d82523d6000602084013e611c6d565b606091505b509150915081611cbf5760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016105bf565b805115610b225780806020019051810190611cda919061287e565b610b225760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105bf565b60405162461bcd60e51b815260206004820152603f60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420776974686472617760448201527f2066726f6d207468697320636f6e74726163742e204f6e6c7920657869742e0060648201526084016105bf565b6001600160a01b03811660009081526010602052604090206005546002820154611e195760005b81811015611e1757600283018054600181810183556000928352602080842090920183905560038601805491820181558352908220015580611e0f816126d5565b915050611dce565b505b6001820154611e2757505050565b60005b81811015610b22576000670de0b6b3a7640000600c8381548110611e5057611e506126a9565b90600052602060002001548560010154611e6a9190612780565b611e74919061279f565b90506000846002018381548110611e8d57611e8d6126a9565b906000526020600020015482611ea39190612769565b90508015611f1c5780856003018481548110611ec157611ec16126a9565b9060005260206000200154611ed69190612738565b856003018481548110611eeb57611eeb6126a9565b906000526020600020018190555081856002018481548110611f0f57611f0f6126a9565b6000918252602090912001555b50508080611f29906126d5565b915050611e2a565b6040516001600160a01b0380851660248301528316604482015260648101829052610b229085906323b872dd60e01b90608401611336565b60405162461bcd60e51b815260206004820152603c60248201527f4f6e6c7945786974466561747572653a3a63616e6e6f7420636c61696d20667260448201527f6f6d207468697320636f6e74726163742e204f6e6c7920657869742e0000000060648201526084016105bf565b6001600160a01b0381166000908152601060205260409020611ff76110d6565b61200082611da7565b60055460005b81811015610b22576000836003018281548110612025576120256126a9565b906000526020600020015490506000846003018381548110612049576120496126a9565b9060005260206000200181905550806002838154811061206b5761206b6126a9565b90600052602060002001546120809190612738565b60028381548110612093576120936126a9565b9060005260206000200181905550846001600160a01b03167f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e82600585815481106120e0576120e06126a9565b60009182526020909120015460405161211592916001600160a01b0316909182526001600160a01b0316602082015260400190565b60405180910390a2612135858260058581548110610722576107226126a9565b5080612140816126d5565b915050612006565b600082116121a35760405162461bcd60e51b815260206004820152602260248201527f52657761726473506f6f6c426173653a2063616e6e6f74207769746864726177604482015261020360f41b60648201526084016105bf565b6001600160a01b03811660009081526010602052604090206121c36110d6565b6121cc82611da7565b8281600101546121dc9190612769565b8160010181905550826001546121f29190612769565b60015560055460005b8181101561227c576000670de0b6b3a7640000600c8381548110612221576122216126a9565b9060005260206000200154856001015461223b9190612780565b612245919061279f565b90508084600201838154811061225d5761225d6126a9565b6000918252602090912001555080612274816126d5565b9150506121fb565b50826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5856040516122b891815260200190565b60405180910390a2600654610b22906001600160a01b0316848661130a565b508054600082559060005260206000209081019061075f919061237b565b828054828255906000526020600020908101928215612330579160200282015b82811115612330578251825591602001919060010190612315565b5061233c92915061237b565b5090565b828054828255906000526020600020908101928215612330579160200282015b82811115612330578235825591602001919060010190612360565b5b8082111561233c576000815560010161237c565b80356001600160a01b03811681146123a757600080fd5b919050565b6000602082840312156123be57600080fd5b6123c782612390565b9392505050565b60005b838110156123e95781810151838201526020016123d1565b83811115610b225750506000910152565b60208152600082518060208401526124198160408501602087016123ce565b601f01601f19169190910160400192915050565b60006020828403121561243f57600080fd5b5035919050565b6000806040838503121561245957600080fd5b61246283612390565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561249957600080fd5b8235915060208084013567ffffffffffffffff808211156124b957600080fd5b818601915086601f8301126124cd57600080fd5b8135818111156124df576124df612470565b8060051b604051601f19603f8301168101818110858211171561250457612504612470565b60405291825284820192508381018501918983111561252257600080fd5b938501935b8285101561254057843584529385019392850192612527565b8096505050505050509250929050565b6000806000806060858703121561256657600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561258c57600080fd5b818701915087601f8301126125a057600080fd5b8135818111156125af57600080fd5b8860208260051b85010111156125c457600080fd5b95989497505060200194505050565b600080604083850312156125e657600080fd5b6125ef83612390565b91506125fd60208401612390565b90509250929050565b60008060006060848603121561261b57600080fd5b61262484612390565b95602085013595506040909401359392505050565b600181811c9082168061264d57607f821691505b6020821081141561266e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156126e9576126e96126bf565b5060010190565b60208082526028908201527f52657761726473506f6f6c426173653a20696e76616c69642072657761726450604082015267195c94d958dbdb9960c21b606082015260800190565b6000821982111561274b5761274b6126bf565b500190565b60006020828403121561276257600080fd5b5051919050565b60008282101561277b5761277b6126bf565b500390565b600081600019048311821515161561279a5761279a6126bf565b500290565b6000826127bc57634e487b7160e01b600052601260045260246000fd5b500490565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015612808578451835293830193918301916001016127ec565b509098975050505050505050565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b8181101561280857845483526001948501949284019201612846565b600082516128748184602087016123ce565b9190910192915050565b60006020828403121561289057600080fd5b815180151581146123c757600080fdfea26469706673582212208222ab29b75a6fdd9be94ea2484575d28e47f7212a4314acefc8f203659f928f64736f6c63430008090033";

type StakeReceiverRewardsPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeReceiverRewardsPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeReceiverRewardsPoolMock__factory extends ContractFactory {
  constructor(...args: StakeReceiverRewardsPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakeReceiverRewardsPoolMock> {
    return super.deploy(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      overrides || {}
    ) as Promise<StakeReceiverRewardsPoolMock>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _startTimestamp: BigNumberish,
    _endTimestamp: BigNumberish,
    _rewardsTokens: string[],
    _stakeLimit: BigNumberish,
    _contractStakeLimit: BigNumberish,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _startTimestamp,
      _endTimestamp,
      _rewardsTokens,
      _stakeLimit,
      _contractStakeLimit,
      _name,
      overrides || {}
    );
  }
  attach(address: string): StakeReceiverRewardsPoolMock {
    return super.attach(address) as StakeReceiverRewardsPoolMock;
  }
  connect(signer: Signer): StakeReceiverRewardsPoolMock__factory {
    return super.connect(signer) as StakeReceiverRewardsPoolMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeReceiverRewardsPoolMockInterface {
    return new utils.Interface(_abi) as StakeReceiverRewardsPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeReceiverRewardsPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakeReceiverRewardsPoolMock;
  }
}
